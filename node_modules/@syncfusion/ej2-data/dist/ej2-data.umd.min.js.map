{"version":3,"file":"ej2-data.umd.min.js","sources":["../src/query.js","../src/util.js","../src/adaptors.js","../src/manager.js"],"sourcesContent":["import { DataUtil } from './util';\n/**\n * Query class is used to build query which is used by the DataManager to communicate with datasource.\n */\nvar Query = /** @class */ (function () {\n    /**\n     * Constructor for Query class.\n     * @param  {string|string[]} from?\n     * @hidden\n     */\n    function Query(from) {\n        /** @hidden */\n        this.subQuery = null;\n        /** @hidden */\n        this.isChild = false;\n        this.queries = [];\n        this.key = '';\n        this.fKey = '';\n        if (typeof from === 'string') {\n            this.fromTable = from;\n        }\n        else if (from && from instanceof Array) {\n            this.lookups = from;\n        }\n        this.expands = [];\n        this.sortedColumns = [];\n        this.groupedColumns = [];\n        this.subQuery = null;\n        this.isChild = false;\n        this.params = [];\n        return this;\n    }\n    /**\n     * Sets the primary key.\n     * @param  {string} field - Defines the column field.\n     */\n    Query.prototype.setKey = function (field) {\n        this.key = field;\n        return this;\n    };\n    /**\n     * Sets default DataManager to execute query.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.using = function (dataManager) {\n        this.dataManager = dataManager;\n        return this;\n    };\n    /**\n     * Executes query with the given DataManager.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     * @param  {Function} done - Defines the success callback.\n     * @param  {Function} fail - Defines the failure callback.\n     * @param  {Function} always - Defines the callback which will be invoked on either success or failure.\n     *\n     * <pre>\n     * let dataManager: DataManager = new DataManager([{ ID: '10' }, { ID: '2' }, { ID: '1' }, { ID: '20' }]);\n     * let query: Query = new Query();\n     * query.sortBy('ID', (x: string, y: string): number => { return parseInt(x, 10) - parseInt(y, 10) });\n     * let promise: Promise< Object > = query.execute(dataManager);\n     * promise.then((e: { result: Object }) => { });\n     * </pre>\n     */\n    Query.prototype.execute = function (dataManager, done, fail, always) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeQuery(this, done, fail, always);\n        }\n        return DataUtil.throwError('Query - execute() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Executes query with the local datasource.\n     * @param  {DataManager} dataManager - Defines the DataManager.\n     */\n    Query.prototype.executeLocal = function (dataManager) {\n        dataManager = dataManager || this.dataManager;\n        if (dataManager) {\n            return dataManager.executeLocal(this);\n        }\n        return DataUtil.throwError('Query - executeLocal() : dataManager needs to be is set using \"using\" function or should be passed as argument');\n    };\n    /**\n     * Creates deep copy of the Query object.\n     */\n    Query.prototype.clone = function () {\n        var cloned = new Query();\n        cloned.queries = this.queries.slice(0);\n        cloned.key = this.key;\n        cloned.isChild = this.isChild;\n        cloned.dataManager = this.dataManager;\n        cloned.fromTable = this.fromTable;\n        cloned.params = this.params.slice(0);\n        cloned.expands = this.expands.slice(0);\n        cloned.sortedColumns = this.sortedColumns.slice(0);\n        cloned.groupedColumns = this.groupedColumns.slice(0);\n        cloned.subQuerySelector = this.subQuerySelector;\n        cloned.subQuery = this.subQuery;\n        cloned.fKey = this.fKey;\n        cloned.isCountRequired = this.isCountRequired;\n        return cloned;\n    };\n    /**\n     * Specifies the name of table to retrieve data in query execution.\n     * @param  {string} tableName - Defines the table name.\n     */\n    Query.prototype.from = function (tableName) {\n        this.fromTable = tableName;\n        return this;\n    };\n    /**\n     * Adds additional parameter which will be sent along with the request which will be generated while DataManager execute.\n     * @param  {string} key - Defines the key of additional parameter.\n     * @param  {Function|string} value - Defines the value for the key.\n     */\n    Query.prototype.addParams = function (key, value) {\n        if (typeof value === 'function') {\n            this.params.push({ key: key, fn: value });\n        }\n        else {\n            this.params.push({ key: key, value: value });\n        }\n        return this;\n    };\n    /**\n     * Expands the related table.\n     * @param  {string|Object[]} tables\n     */\n    Query.prototype.expand = function (tables) {\n        if (typeof tables === 'string') {\n            this.expands = [].slice.call([tables], 0);\n        }\n        else {\n            this.expands = tables.slice(0);\n        }\n        return this;\n    };\n    /**\n     * Filter data with given filter criteria.\n     * @param  {string|Predicate} fieldName - Defines the column field or Predicate.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string|number|boolean} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.where = function (fieldName, operator, value, ignoreCase, ignoreAccent) {\n        operator = operator ? (operator).toLowerCase() : null;\n        var predicate = null;\n        if (typeof fieldName === 'string') {\n            predicate = new Predicate(fieldName, operator, value, ignoreCase, ignoreAccent);\n        }\n        else if (fieldName instanceof Predicate) {\n            predicate = fieldName;\n        }\n        this.queries.push({\n            fn: 'onWhere',\n            e: predicate\n        });\n        return this;\n    };\n    /**\n     * Search data with given search criteria.\n     * @param  {string|number|boolean} searchKey - Defines the search key.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     * @param  {string} operator - Defines the operator how to search data.\n     * @param  {boolean} ignoreCase - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Query.prototype.search = function (searchKey, fieldNames, operator, ignoreCase, ignoreAccent) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [fieldNames];\n        }\n        operator = operator || 'contains';\n        var comparer = DataUtil.fnOperators[operator];\n        this.queries.push({\n            fn: 'onSearch',\n            e: {\n                fieldNames: fieldNames,\n                operator: operator,\n                searchKey: searchKey,\n                ignoreCase: ignoreCase,\n                ignoreAccent: ignoreAccent,\n                comparer: comparer\n            }\n        });\n        return this;\n    };\n    /**\n     * Sort the data with given sort criteria.\n     * By default, sort direction is ascending.\n     * @param  {string|string[]} fieldName - Defines the single or collection of column fields.\n     * @param  {string|Function} comparer - Defines the sort direction or custom sort comparer function.\n     */\n    Query.prototype.sortBy = function (fieldName, comparer, isFromGroup) {\n        var order = 'ascending';\n        var sorts;\n        var temp;\n        if (typeof fieldName === 'string' && DataUtil.endsWith(fieldName.toLowerCase(), ' desc')) {\n            fieldName = fieldName.replace(/ desc$/i, '');\n            comparer = 'descending';\n        }\n        if (!comparer || typeof comparer === 'string') {\n            order = comparer ? comparer.toLowerCase() : 'ascending';\n            comparer = DataUtil.fnSort(comparer);\n        }\n        if (isFromGroup) {\n            sorts = Query.filterQueries(this.queries, 'onSortBy');\n            for (var i = 0; i < sorts.length; i++) {\n                temp = sorts[i].e.fieldName;\n                if (typeof temp === 'string') {\n                    if (temp === fieldName) {\n                        return this;\n                    }\n                }\n                else if (temp instanceof Array) {\n                    for (var j = 0; j < temp.length; j++) {\n                        if (temp[j] === fieldName || fieldName.toLowerCase() === temp[j] + ' desc') {\n                            return this;\n                        }\n                    }\n                }\n            }\n        }\n        this.queries.push({\n            fn: 'onSortBy',\n            e: {\n                fieldName: fieldName,\n                comparer: comparer,\n                direction: order\n            }\n        });\n        return this;\n    };\n    /**\n     * Sorts data in descending order.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.sortByDesc = function (fieldName) {\n        return this.sortBy(fieldName, 'descending');\n    };\n    /**\n     * Groups data with the given field name.\n     * @param  {string} fieldName - Defines the column field.\n     */\n    Query.prototype.group = function (fieldName, fn, format) {\n        this.sortBy(fieldName, null, true);\n        this.queries.push({\n            fn: 'onGroup',\n            e: {\n                fieldName: fieldName,\n                comparer: fn ? fn : null,\n                format: format ? format : null\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given page index and size.\n     * @param  {number} pageIndex - Defines the current page index.\n     * @param  {number} pageSize - Defines the no of records per page.\n     */\n    Query.prototype.page = function (pageIndex, pageSize) {\n        this.queries.push({\n            fn: 'onPage',\n            e: {\n                pageIndex: pageIndex,\n                pageSize: pageSize\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data based on the given start and end index.\n     * @param  {number} start - Defines the start index of the datasource.\n     * @param  {number} end - Defines the end index of the datasource.\n     */\n    Query.prototype.range = function (start, end) {\n        this.queries.push({\n            fn: 'onRange',\n            e: {\n                start: start,\n                end: end\n            }\n        });\n        return this;\n    };\n    /**\n     * Gets data from the top of the data source based on given number of records count.\n     * @param  {number} nos - Defines the no of records to retrieve from datasource.\n     */\n    Query.prototype.take = function (nos) {\n        this.queries.push({\n            fn: 'onTake',\n            e: {\n                nos: nos\n            }\n        });\n        return this;\n    };\n    /**\n     * Skips data with given number of records count from the top of the data source.\n     * @param  {number} nos - Defines the no of records skip in the datasource.\n     */\n    Query.prototype.skip = function (nos) {\n        this.queries.push({\n            fn: 'onSkip',\n            e: { nos: nos }\n        });\n        return this;\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {string|string[]} fieldNames - Defines the collection of column fields.\n     */\n    Query.prototype.select = function (fieldNames) {\n        if (typeof fieldNames === 'string') {\n            fieldNames = [].slice.call([fieldNames], 0);\n        }\n        this.queries.push({\n            fn: 'onSelect',\n            e: { fieldNames: fieldNames }\n        });\n        return this;\n    };\n    /**\n     * Gets the records in hierarchical relationship from two tables. It requires the foreign key to relate two tables.\n     * @param  {Query} query - Defines the query to relate two tables.\n     * @param  {Function} selectorFn - Defines the custom function to select records.\n     */\n    Query.prototype.hierarchy = function (query, selectorFn) {\n        this.subQuerySelector = selectorFn;\n        this.subQuery = query;\n        return this;\n    };\n    /**\n     * Sets the foreign key which is used to get data from the related table.\n     * @param  {string} key - Defines the foreign key.\n     */\n    Query.prototype.foreignKey = function (key) {\n        this.fKey = key;\n        return this;\n    };\n    /**\n     * It is used to get total number of records in the DataManager execution result.\n     */\n    Query.prototype.requiresCount = function () {\n        this.isCountRequired = true;\n        return this;\n    };\n    //type - sum, avg, min, max\n    /**\n     * Aggregate the data with given type and field name.\n     * @param  {string} type - Defines the aggregate type.\n     * @param  {string} field - Defines the column field to aggregate.\n     */\n    Query.prototype.aggregate = function (type, field) {\n        this.queries.push({\n            fn: 'onAggregates',\n            e: { field: field, type: type }\n        });\n        return this;\n    };\n    /**\n     * Pass array of filterColumn query for performing filter operation.\n     * @param  {QueryOptions[]} queries\n     * @param  {string} name\n     * @hidden\n     */\n    Query.filterQueries = function (queries, name) {\n        return queries.filter(function (q) {\n            return q.fn === name;\n        });\n    };\n    /**\n     * To get the list of queries which is already filtered in current data source.\n     * @param  {Object[]} queries\n     * @param  {string[]} singles\n     * @hidden\n     */\n    Query.filterQueryLists = function (queries, singles) {\n        var filtered = queries.filter(function (q) {\n            return singles.indexOf(q.fn) !== -1;\n        });\n        var res = {};\n        for (var i = 0; i < filtered.length; i++) {\n            if (!res[filtered[i].fn]) {\n                res[filtered[i].fn] = filtered[i].e;\n            }\n        }\n        return res;\n    };\n    return Query;\n}());\nexport { Query };\n/**\n * Predicate class is used to generate complex filter criteria.\n * This will be used by DataManager to perform multiple filtering operation.\n */\nvar Predicate = /** @class */ (function () {\n    /**\n     * Constructor for Predicate class.\n     * @param  {string|Predicate} field\n     * @param  {string} operator\n     * @param  {string|number|boolean|Predicate|Predicate[]} value\n     * @param  {boolean=false} ignoreCase\n     * @hidden\n     */\n    function Predicate(field, operator, value, ignoreCase, ignoreAccent) {\n        if (ignoreCase === void 0) { ignoreCase = false; }\n        /** @hidden */\n        this.ignoreAccent = false;\n        /** @hidden */\n        this.isComplex = false;\n        if (typeof field === 'string') {\n            this.field = field;\n            this.operator = operator.toLowerCase();\n            this.value = value;\n            this.ignoreCase = ignoreCase;\n            this.ignoreAccent = ignoreAccent;\n            this.isComplex = false;\n            this.comparer = DataUtil.fnOperators.processOperator(this.operator);\n        }\n        else if (field instanceof Predicate && value instanceof Predicate || value instanceof Array) {\n            this.isComplex = true;\n            this.condition = operator.toLowerCase();\n            this.predicates = [field];\n            if (value instanceof Array) {\n                [].push.apply(this.predicates, value);\n            }\n            else {\n                this.predicates.push(value);\n            }\n        }\n        return this;\n    }\n    /**\n     * Adds n-number of new predicates on existing predicate with “and” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.and = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'and');\n    };\n    /**\n     * Adds new predicate on existing predicate with “and” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.and = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'and', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Adds n-number of new predicates on existing predicate with “or” condition.\n     * @param  {Object[]} args - Defines the collection of predicates.\n     */\n    Predicate.or = function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return Predicate.combinePredicates([].slice.call(args, 0), 'or');\n    };\n    /**\n     * Adds new predicate on existing predicate with “or” condition.\n     * @param  {string} field - Defines the column field.\n     * @param  {string} operator - Defines the operator how to filter data.\n     * @param  {string} value - Defines the values to match with data.\n     * @param  {boolean} ignoreCase? - If ignore case set to false, then filter data with exact match or else\n     * filter data with case insensitive.\n     */\n    Predicate.prototype.or = function (field, operator, value, ignoreCase, ignoreAccent) {\n        return Predicate.combine(this, field, operator, value, 'or', ignoreCase, ignoreAccent);\n    };\n    /**\n     * Converts plain JavaScript object to Predicate object.\n     * @param  {Predicate[]|Predicate} json - Defines single or collection of Predicate.\n     */\n    Predicate.fromJson = function (json) {\n        if (json instanceof Array) {\n            var res = [];\n            for (var i = 0, len = json.length; i < len; i++) {\n                res.push(this.fromJSONData(json[i]));\n            }\n            return res;\n        }\n        var pred = json;\n        return this.fromJSONData(pred);\n    };\n    /**\n     * Validate the record based on the predicates.\n     * @param  {Object} record - Defines the datasource record.\n     */\n    Predicate.prototype.validate = function (record) {\n        var predicate = this.predicates ? this.predicates : [];\n        var isAnd;\n        var ret;\n        if (!this.isComplex && this.comparer) {\n            return this.comparer.call(this, DataUtil.getObject(this.field, record), this.value, this.ignoreCase, this.ignoreAccent);\n        }\n        isAnd = this.condition === 'and';\n        for (var i = 0; i < predicate.length; i++) {\n            ret = predicate[i].validate(record);\n            if (isAnd) {\n                if (!ret) {\n                    return false;\n                }\n            }\n            else {\n                if (ret) {\n                    return true;\n                }\n            }\n        }\n        return isAnd;\n    };\n    /**\n     * Converts predicates to plain JavaScript.\n     * This method is uses Json stringify when serializing Predicate object.\n     */\n    Predicate.prototype.toJson = function () {\n        var predicates;\n        var p;\n        if (this.isComplex) {\n            predicates = [];\n            p = this.predicates;\n            for (var i = 0; i < p.length; i++) {\n                predicates.push(p[i].toJson());\n            }\n        }\n        return {\n            isComplex: this.isComplex,\n            field: this.field,\n            operator: this.operator,\n            value: this.value,\n            ignoreCase: this.ignoreCase,\n            ignoreAccent: this.ignoreAccent,\n            condition: this.condition,\n            predicates: predicates\n        };\n    };\n    Predicate.combinePredicates = function (predicates, operator) {\n        if (predicates.length === 1) {\n            if (!(predicates[0] instanceof Array)) {\n                return predicates[0];\n            }\n            predicates = predicates[0];\n        }\n        return new Predicate(predicates[0], operator, predicates.slice(1));\n    };\n    Predicate.combine = function (pred, field, operator, value, condition, ignoreCase, ignoreAccent) {\n        if (field instanceof Predicate) {\n            return Predicate[condition](pred, field);\n        }\n        if (typeof field === 'string') {\n            return Predicate[condition](pred, new Predicate(field, operator, value, ignoreCase, ignoreAccent));\n        }\n        return DataUtil.throwError('Predicate - ' + condition + ' : invalid arguments');\n    };\n    Predicate.fromJSONData = function (json) {\n        var preds = json.predicates || [];\n        var len = preds.length;\n        var predicates = [];\n        var result;\n        for (var i = 0; i < len; i++) {\n            predicates.push(this.fromJSONData(preds[i]));\n        }\n        if (!json.isComplex) {\n            result = new Predicate(json.field, json.operator, json.value, json.ignoreCase, json.ignoreAccent);\n        }\n        else {\n            result = new Predicate(predicates[0], json.condition, predicates.slice(1));\n        }\n        return result;\n    };\n    return Predicate;\n}());\nexport { Predicate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from './manager';\nimport { Query } from './query';\nvar consts = { GroupGuid: '{271bbba0-1ee7}' };\n/**\n * Data manager common utility methods.\n * @hidden\n */\nvar DataUtil = /** @class */ (function () {\n    function DataUtil() {\n    }\n    /**\n     * Returns the value by invoking the provided parameter function.\n     * If the paramater is not of type function then it will be returned as it is.\n     * @param  {Function|string|string[]|number} value\n     * @param  {Object} inst?\n     * @hidden\n     */\n    DataUtil.getValue = function (value, inst) {\n        if (typeof value === 'function') {\n            return value.call(inst || {});\n        }\n        return value;\n    };\n    /**\n     * Returns true if the input string ends with given string.\n     * @param  {string} input\n     * @param  {string} substr\n     */\n    DataUtil.endsWith = function (input, substr) {\n        return input.slice(-substr.length) === substr;\n    };\n    /**\n     * Returns true if the input string starts with given string.\n     * @param  {string} str\n     * @param  {string} startstr\n     */\n    DataUtil.startsWith = function (input, start) {\n        return input.slice(0, start.length) === start;\n    };\n    /**\n     * To return the sorting function based on the string.\n     * @param  {string} order\n     * @hidden\n     */\n    DataUtil.fnSort = function (order) {\n        order = order ? DataUtil.toLowerCase(order) : 'ascending';\n        if (order === 'ascending') {\n            return this.fnAscending;\n        }\n        return this.fnDescending;\n    };\n    /**\n     * Comparer function which is used to sort the data in ascending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnAscending = function (x, y) {\n        if (y === null || y === undefined) {\n            return -1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y);\n        }\n        if (x === null || x === undefined) {\n            return 1;\n        }\n        return x - y;\n    };\n    /**\n     * Comparer function which is used to sort the data in descending order.\n     * @param  {string|number} x\n     * @param  {string|number} y\n     * @returns number\n     */\n    DataUtil.fnDescending = function (x, y) {\n        if (y === null || y === undefined) {\n            return 1;\n        }\n        if (typeof x === 'string') {\n            return x.localeCompare(y) * -1;\n        }\n        if (x === null || x === undefined) {\n            return -1;\n        }\n        return y - x;\n    };\n    DataUtil.extractFields = function (obj, fields) {\n        var newObj = {};\n        for (var i = 0; i < fields.length; i++) {\n            newObj = this.setValue(fields[i], this.getObject(fields[i], obj), newObj);\n        }\n        return newObj;\n    };\n    /**\n     * Select objects by given fields from jsonArray.\n     * @param  {Object[]} jsonArray\n     * @param  {string[]} fields\n     */\n    DataUtil.select = function (jsonArray, fields) {\n        var newData = [];\n        for (var i = 0; i < jsonArray.length; i++) {\n            newData.push(this.extractFields(jsonArray[i], fields));\n        }\n        return newData;\n    };\n    /**\n     * Group the input data based on the field name.\n     * It also performs aggregation of the grouped records based on the aggregates paramater.\n     * @param  {Object[]} jsonArray\n     * @param  {string} field?\n     * @param  {Object[]} agg?\n     * @param  {number} level?\n     * @param  {Object[]} groupDs?\n     */\n    DataUtil.group = function (jsonArray, field, aggregates, level, groupDs, format) {\n        level = level || 1;\n        var jsonData = jsonArray;\n        var guid = 'GroupGuid';\n        if (jsonData.GroupGuid === consts[guid]) {\n            var _loop_1 = function (j) {\n                if (!isNullOrUndefined(groupDs)) {\n                    var indx = -1;\n                    var temp = groupDs.filter(function (e) { return e.key === jsonData[j].key; });\n                    indx = groupDs.indexOf(temp[0]);\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, groupDs[indx].items, format);\n                    jsonData[j].count = groupDs[indx].count;\n                }\n                else {\n                    jsonData[j].items = this_1.group(jsonData[j].items, field, aggregates, jsonData.level + 1, null, format);\n                    jsonData[j].count = jsonData[j].items.length;\n                }\n            };\n            var this_1 = this;\n            for (var j = 0; j < jsonData.length; j++) {\n                _loop_1(j);\n            }\n            jsonData.childLevels += 1;\n            return jsonData;\n        }\n        var grouped = {};\n        var groupedArray = [];\n        groupedArray.GroupGuid = consts[guid];\n        groupedArray.level = level;\n        groupedArray.childLevels = 0;\n        groupedArray.records = jsonData;\n        var _loop_2 = function (i) {\n            var val = this_2.getVal(jsonData, i, field);\n            if (!isNullOrUndefined(format)) {\n                val = format(val, field);\n            }\n            if (!grouped[val]) {\n                grouped[val] = {\n                    key: val,\n                    count: 0,\n                    items: [],\n                    aggregates: {},\n                    field: field\n                };\n                groupedArray.push(grouped[val]);\n                if (!isNullOrUndefined(groupDs)) {\n                    var tempObj = groupDs.filter(function (e) { return e.key === grouped[val].key; });\n                    grouped[val].count = tempObj[0].count;\n                }\n            }\n            grouped[val].count = !isNullOrUndefined(groupDs) ? grouped[val].count : grouped[val].count += 1;\n            grouped[val].items.push(jsonData[i]);\n        };\n        var this_2 = this;\n        for (var i = 0; i < jsonData.length; i++) {\n            _loop_2(i);\n        }\n        if (aggregates && aggregates.length) {\n            var _loop_3 = function (i) {\n                var res = {};\n                var fn = void 0;\n                var aggs = aggregates;\n                for (var j = 0; j < aggregates.length; j++) {\n                    fn = DataUtil.aggregates[aggregates[j].type];\n                    if (!isNullOrUndefined(groupDs)) {\n                        var temp = groupDs.filter(function (e) { return e.key === groupedArray[i].key; });\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(temp[0].items, aggs[j].field);\n                        }\n                    }\n                    else {\n                        if (fn) {\n                            res[aggs[j].field + ' - ' + aggs[j].type] = fn(groupedArray[i].items, aggs[j].field);\n                        }\n                    }\n                }\n                groupedArray[i].aggregates = res;\n            };\n            for (var i = 0; i < groupedArray.length; i++) {\n                _loop_3(i);\n            }\n        }\n        return jsonData.length && groupedArray || jsonData;\n    };\n    /**\n     * It is used to categorize the multiple items based on a specific field in jsonArray.\n     * The hierarchical queries are commonly required when you use foreign key binding.\n     * @param  {string} fKey\n     * @param  {string} from\n     * @param  {Object[]} source\n     * @param  {Group} lookup?\n     * @param  {string} pKey?\n     * @hidden\n     */\n    DataUtil.buildHierarchy = function (fKey, from, source, lookup, pKey) {\n        var i;\n        var grp = {};\n        var temp;\n        if (lookup.result) {\n            lookup = lookup.result;\n        }\n        if (lookup.GroupGuid) {\n            this.throwError('DataManager: Do not have support Grouping in hierarchy');\n        }\n        for (i = 0; i < lookup.length; i++) {\n            var fKeyData = this.getObject(fKey, lookup[i]);\n            temp = grp[fKeyData] || (grp[fKeyData] = []);\n            temp.push(lookup[i]);\n        }\n        for (i = 0; i < source.length; i++) {\n            var fKeyData = this.getObject(pKey || fKey, source[i]);\n            source[i][from] = grp[fKeyData];\n        }\n    };\n    /**\n     * The method used to get the field names which started with specified characters.\n     * @param  {Object} obj\n     * @param  {string[]} fields?\n     * @param  {string} prefix?\n     * @hidden\n     */\n    DataUtil.getFieldList = function (obj, fields, prefix) {\n        if (prefix === undefined) {\n            prefix = '';\n        }\n        if (fields === undefined || fields === null) {\n            return this.getFieldList(obj, [], prefix);\n        }\n        var copyObj = obj;\n        var keys = Object.keys(obj);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var prop = keys_1[_i];\n            if (typeof copyObj[prop] === 'object' && !(copyObj[prop] instanceof Array)) {\n                this.getFieldList(copyObj[prop], fields, prefix + prop + '.');\n            }\n            else {\n                fields.push(prefix + prop);\n            }\n        }\n        return fields;\n    };\n    /**\n     * Gets the value of the property in the given object.\n     * The complex object can be accessed by providing the field names concatenated with dot(.).\n     * @param  {string} nameSpace - The name of the property to be accessed.\n     * @param  {Object} from - Defines the source object.\n     */\n    DataUtil.getObject = function (nameSpace, from) {\n        if (!nameSpace) {\n            return from;\n        }\n        if (!from) {\n            return undefined;\n        }\n        if (nameSpace.indexOf('.') === -1) {\n            return from[nameSpace];\n        }\n        var value = from;\n        var splits = nameSpace.split('.');\n        for (var i = 0; i < splits.length; i++) {\n            if (value == null) {\n                break;\n            }\n            value = value[splits[i]];\n        }\n        return value;\n    };\n    /**\n     * To set value for the nameSpace in desired object.\n     * @param {string} nameSpace - String value to the get the inner object.\n     * @param {Object} value - Value that you need to set.\n     * @param {Object} obj - Object to get the inner object value.\n     * @return { [key: string]: Object; } | Object\n     * @hidden\n     */\n    DataUtil.setValue = function (nameSpace, value, obj) {\n        var keys = nameSpace.toString().split('.');\n        var start = obj || {};\n        var fromObj = start;\n        var i;\n        var length = keys.length;\n        var key;\n        for (i = 0; i < length; i++) {\n            key = keys[i];\n            if (i + 1 === length) {\n                fromObj[key] = value === undefined ? undefined : value;\n            }\n            else if (isNullOrUndefined(fromObj[key])) {\n                fromObj[key] = {};\n            }\n            fromObj = fromObj[key];\n        }\n        return start;\n    };\n    /**\n     * Sort the given data based on the field and comparer.\n     * @param  {Object[]} ds - Defines the input data.\n     * @param  {string} field - Defines the field to be sorted.\n     * @param  {Function} comparer - Defines the comparer function used to sort the records.\n     */\n    DataUtil.sort = function (ds, field, comparer) {\n        if (ds.length <= 1) {\n            return ds;\n        }\n        var middle = parseInt((ds.length / 2).toString(), 10);\n        var left = ds.slice(0, middle);\n        var right = ds.slice(middle);\n        left = this.sort(left, field, comparer);\n        right = this.sort(right, field, comparer);\n        return this.merge(left, right, field, comparer);\n    };\n    DataUtil.ignoreDiacritics = function (value) {\n        if (typeof value !== 'string') {\n            return value;\n        }\n        var result = value.split('');\n        var newValue = result.map(function (temp) { return temp in DataUtil.diacritics ? DataUtil.diacritics[temp] : temp; });\n        return newValue.join('');\n    };\n    DataUtil.merge = function (left, right, fieldName, comparer) {\n        var result = [];\n        var current;\n        while (left.length > 0 || right.length > 0) {\n            if (left.length > 0 && right.length > 0) {\n                if (comparer) {\n                    current = comparer(this.getVal(left, 0, fieldName), this.getVal(right, 0, fieldName)) <= 0 ? left : right;\n                }\n                else {\n                    current = left[0][fieldName] < left[0][fieldName] ? left : right;\n                }\n            }\n            else {\n                current = left.length > 0 ? left : right;\n            }\n            result.push(current.shift());\n        }\n        return result;\n    };\n    DataUtil.getVal = function (array, index, field) {\n        return field ? this.getObject(field, array[index]) : array[index];\n    };\n    DataUtil.toLowerCase = function (val) {\n        return val ? typeof val === 'string' ? val.toLowerCase() : val.toString() : (val === 0 || val === false) ? val.toString() : '';\n    };\n    /**\n     * To perform the filter operation with specified adaptor and returns the result.\n     * @param  {Object} adaptor\n     * @param  {string} fnName\n     * @param  {Object} param1?\n     * @param  {Object} param2?\n     * @hidden\n     */\n    DataUtil.callAdaptorFunction = function (adaptor, fnName, param1, param2) {\n        if (fnName in adaptor) {\n            var res = adaptor[fnName](param1, param2);\n            if (!isNullOrUndefined(res)) {\n                param1 = res;\n            }\n        }\n        return param1;\n    };\n    /**\n     * Checks wheather the given input is a plain object or not.\n     * @param  {Object|Object[]} obj\n     */\n    DataUtil.isPlainObject = function (obj) {\n        return (!!obj) && (obj.constructor === Object);\n    };\n    /**\n     * Returns true when the browser cross origin request.\n     */\n    DataUtil.isCors = function () {\n        var xhr = null;\n        var request = 'XMLHttpRequest';\n        try {\n            xhr = new window[request]();\n        }\n        catch (e) {\n            // No exception handling\n        }\n        return !!xhr && ('withCredentials' in xhr);\n    };\n    /**\n     * Generate random GUID value which will be prefixed with the given value.\n     * @param  {string} prefix\n     */\n    DataUtil.getGuid = function (prefix) {\n        var hexs = '0123456789abcdef';\n        var rand;\n        return (prefix || '') + '00000000-0000-4000-0000-000000000000'.replace(/0/g, function (val, i) {\n            if ('crypto' in window && 'getRandomValues' in crypto) {\n                var arr = new Uint8Array(1);\n                window.crypto.getRandomValues(arr);\n                rand = arr[0] % 16 | 0;\n            }\n            else {\n                rand = Math.random() * 16 | 0;\n            }\n            return hexs[i === 19 ? rand & 0x3 | 0x8 : rand];\n        });\n    };\n    /**\n     * Checks wheather the given value is null or not.\n     * @param  {string|Object} val\n     * @returns boolean\n     */\n    DataUtil.isNull = function (val) {\n        return val === undefined || val === null;\n    };\n    /**\n     * To get the required items from collection of objects.\n     * @param  {Object[]} array\n     * @param  {string} field\n     * @param  {Function} comparer\n     * @returns Object\n     * @hidden\n     */\n    DataUtil.getItemFromComparer = function (array, field, comparer) {\n        var keyVal;\n        var current;\n        var key;\n        var i = 0;\n        var castRequired = typeof DataUtil.getVal(array, 0, field) === 'string';\n        if (array.length) {\n            while (isNullOrUndefined(keyVal) && i < array.length) {\n                keyVal = DataUtil.getVal(array, i, field);\n                key = array[i++];\n            }\n        }\n        for (; i < array.length; i++) {\n            current = DataUtil.getVal(array, i, field);\n            if (isNullOrUndefined(current)) {\n                continue;\n            }\n            if (castRequired) {\n                keyVal = +keyVal;\n                current = +current;\n            }\n            if (comparer(keyVal, current) > 0) {\n                keyVal = current;\n                key = array[i];\n            }\n        }\n        return key;\n    };\n    /**\n     * To get distinct values of Array or Array of Objects.\n     * @param  {Object[]} json\n     * @param  {string} field\n     * @param  {boolean} requiresCompleteRecord\n     * @returns Object[]\n     * * distinct array of objects is return when requiresCompleteRecord set as true.\n     * @hidden\n     */\n    DataUtil.distinct = function (json, fieldName, requiresCompleteRecord) {\n        requiresCompleteRecord = isNullOrUndefined(requiresCompleteRecord) ? false : requiresCompleteRecord;\n        var result = [];\n        var val;\n        var tmp = {};\n        json.forEach(function (data, index) {\n            val = DataUtil.getVal(json, index, fieldName);\n            if (!(val in tmp)) {\n                result.push(!requiresCompleteRecord ? val : json[index]);\n                tmp[val] = 1;\n            }\n        });\n        return result;\n    };\n    /**\n     * Specifies the value which will be used to adjust the date value to server timezone.\n     * @default null\n     */\n    DataUtil.serverTimezoneOffset = null;\n    /**\n     * Throw error with the given string as message.\n     * @param  {string} er\n     */\n    DataUtil.throwError = function (error) {\n        try {\n            throw new Error(error);\n        }\n        catch (e) {\n            throw e.message + '\\n' + e.stack;\n        }\n    };\n    DataUtil.aggregates = {\n        /**\n         * Calculate sum of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        sum: function (ds, field) {\n            var result = 0;\n            var val;\n            var castRequired = typeof DataUtil.getVal(ds, 0, field) !== 'number';\n            for (var i = 0; i < ds.length; i++) {\n                val = DataUtil.getVal(ds, i, field);\n                if (!isNaN(val) && val !== null) {\n                    if (castRequired) {\n                        val = +val;\n                    }\n                    result += val;\n                }\n            }\n            return result;\n        },\n        /**\n         * Calculate average value of the given field in the data.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        average: function (ds, field) {\n            return DataUtil.aggregates.sum(ds, field) / ds.length;\n        },\n        /**\n         * Returns the min value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string|Function} field\n         */\n        min: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnAscending));\n        },\n        /**\n         * Returns the max value of the data based on the field.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         * @returns number\n         */\n        max: function (ds, field) {\n            var comparer;\n            if (typeof field === 'function') {\n                comparer = field;\n                field = null;\n            }\n            return DataUtil.getObject(field, DataUtil.getItemFromComparer(ds, field, comparer || DataUtil.fnDescending));\n        },\n        /**\n         * Returns the total number of true value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        truecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', true, true)).length;\n        },\n        /**\n         * Returns the total number of false value present in the data based on the given boolean field name.\n         * @param  {Object[]} ds\n         * @param  {string} field\n         */\n        falsecount: function (ds, field) {\n            return new DataManager(ds).executeLocal(new Query().where(field, 'equal', false, true)).length;\n        },\n        /**\n         * Returns the length of the given data.\n         * @param  {Object[]} ds\n         * @param  {string} field?\n         * @returns number\n         */\n        count: function (ds, field) {\n            return ds.length;\n        }\n    };\n    /**\n     * Specifies the Object with filter operators.\n     */\n    DataUtil.operatorSymbols = {\n        '<': 'lessthan',\n        '>': 'greaterthan',\n        '<=': 'lessthanorequal',\n        '>=': 'greaterthanorequal',\n        '==': 'equal',\n        '!=': 'notequal',\n        '*=': 'contains',\n        '$=': 'endswith',\n        '^=': 'startswith'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * * It will be used for date/number type filter query.\n     */\n    DataUtil.odBiOperator = {\n        '<': ' lt ',\n        '>': ' gt ',\n        '<=': ' le ',\n        '>=': ' ge ',\n        '==': ' eq ',\n        '!=': ' ne ',\n        'lessthan': ' lt ',\n        'lessthanorequal': ' le ',\n        'greaterthan': ' gt ',\n        'greaterthanorequal': ' ge ',\n        'equal': ' eq ',\n        'notequal': ' ne '\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for OData filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odUniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'substringof',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'substringof'\n    };\n    /**\n     * Specifies the Object with filter operators which will be used for ODataV4 filter query generation.\n     * It will be used for string type filter query.\n     */\n    DataUtil.odv4UniOperator = {\n        '$=': 'endswith',\n        '^=': 'startswith',\n        '*=': 'contains',\n        'endswith': 'endswith',\n        'startswith': 'startswith',\n        'contains': 'contains'\n    };\n    DataUtil.diacritics = {\n        '\\u24B6': 'A',\n        '\\uFF21': 'A',\n        '\\u00C0': 'A',\n        '\\u00C1': 'A',\n        '\\u00C2': 'A',\n        '\\u1EA6': 'A',\n        '\\u1EA4': 'A',\n        '\\u1EAA': 'A',\n        '\\u1EA8': 'A',\n        '\\u00C3': 'A',\n        '\\u0100': 'A',\n        '\\u0102': 'A',\n        '\\u1EB0': 'A',\n        '\\u1EAE': 'A',\n        '\\u1EB4': 'A',\n        '\\u1EB2': 'A',\n        '\\u0226': 'A',\n        '\\u01E0': 'A',\n        '\\u00C4': 'A',\n        '\\u01DE': 'A',\n        '\\u1EA2': 'A',\n        '\\u00C5': 'A',\n        '\\u01FA': 'A',\n        '\\u01CD': 'A',\n        '\\u0200': 'A',\n        '\\u0202': 'A',\n        '\\u1EA0': 'A',\n        '\\u1EAC': 'A',\n        '\\u1EB6': 'A',\n        '\\u1E00': 'A',\n        '\\u0104': 'A',\n        '\\u023A': 'A',\n        '\\u2C6F': 'A',\n        '\\uA732': 'AA',\n        '\\u00C6': 'AE',\n        '\\u01FC': 'AE',\n        '\\u01E2': 'AE',\n        '\\uA734': 'AO',\n        '\\uA736': 'AU',\n        '\\uA738': 'AV',\n        '\\uA73A': 'AV',\n        '\\uA73C': 'AY',\n        '\\u24B7': 'B',\n        '\\uFF22': 'B',\n        '\\u1E02': 'B',\n        '\\u1E04': 'B',\n        '\\u1E06': 'B',\n        '\\u0243': 'B',\n        '\\u0182': 'B',\n        '\\u0181': 'B',\n        '\\u24B8': 'C',\n        '\\uFF23': 'C',\n        '\\u0106': 'C',\n        '\\u0108': 'C',\n        '\\u010A': 'C',\n        '\\u010C': 'C',\n        '\\u00C7': 'C',\n        '\\u1E08': 'C',\n        '\\u0187': 'C',\n        '\\u023B': 'C',\n        '\\uA73E': 'C',\n        '\\u24B9': 'D',\n        '\\uFF24': 'D',\n        '\\u1E0A': 'D',\n        '\\u010E': 'D',\n        '\\u1E0C': 'D',\n        '\\u1E10': 'D',\n        '\\u1E12': 'D',\n        '\\u1E0E': 'D',\n        '\\u0110': 'D',\n        '\\u018B': 'D',\n        '\\u018A': 'D',\n        '\\u0189': 'D',\n        '\\uA779': 'D',\n        '\\u01F1': 'DZ',\n        '\\u01C4': 'DZ',\n        '\\u01F2': 'Dz',\n        '\\u01C5': 'Dz',\n        '\\u24BA': 'E',\n        '\\uFF25': 'E',\n        '\\u00C8': 'E',\n        '\\u00C9': 'E',\n        '\\u00CA': 'E',\n        '\\u1EC0': 'E',\n        '\\u1EBE': 'E',\n        '\\u1EC4': 'E',\n        '\\u1EC2': 'E',\n        '\\u1EBC': 'E',\n        '\\u0112': 'E',\n        '\\u1E14': 'E',\n        '\\u1E16': 'E',\n        '\\u0114': 'E',\n        '\\u0116': 'E',\n        '\\u00CB': 'E',\n        '\\u1EBA': 'E',\n        '\\u011A': 'E',\n        '\\u0204': 'E',\n        '\\u0206': 'E',\n        '\\u1EB8': 'E',\n        '\\u1EC6': 'E',\n        '\\u0228': 'E',\n        '\\u1E1C': 'E',\n        '\\u0118': 'E',\n        '\\u1E18': 'E',\n        '\\u1E1A': 'E',\n        '\\u0190': 'E',\n        '\\u018E': 'E',\n        '\\u24BB': 'F',\n        '\\uFF26': 'F',\n        '\\u1E1E': 'F',\n        '\\u0191': 'F',\n        '\\uA77B': 'F',\n        '\\u24BC': 'G',\n        '\\uFF27': 'G',\n        '\\u01F4': 'G',\n        '\\u011C': 'G',\n        '\\u1E20': 'G',\n        '\\u011E': 'G',\n        '\\u0120': 'G',\n        '\\u01E6': 'G',\n        '\\u0122': 'G',\n        '\\u01E4': 'G',\n        '\\u0193': 'G',\n        '\\uA7A0': 'G',\n        '\\uA77D': 'G',\n        '\\uA77E': 'G',\n        '\\u24BD': 'H',\n        '\\uFF28': 'H',\n        '\\u0124': 'H',\n        '\\u1E22': 'H',\n        '\\u1E26': 'H',\n        '\\u021E': 'H',\n        '\\u1E24': 'H',\n        '\\u1E28': 'H',\n        '\\u1E2A': 'H',\n        '\\u0126': 'H',\n        '\\u2C67': 'H',\n        '\\u2C75': 'H',\n        '\\uA78D': 'H',\n        '\\u24BE': 'I',\n        '\\uFF29': 'I',\n        '\\u00CC': 'I',\n        '\\u00CD': 'I',\n        '\\u00CE': 'I',\n        '\\u0128': 'I',\n        '\\u012A': 'I',\n        '\\u012C': 'I',\n        '\\u0130': 'I',\n        '\\u00CF': 'I',\n        '\\u1E2E': 'I',\n        '\\u1EC8': 'I',\n        '\\u01CF': 'I',\n        '\\u0208': 'I',\n        '\\u020A': 'I',\n        '\\u1ECA': 'I',\n        '\\u012E': 'I',\n        '\\u1E2C': 'I',\n        '\\u0197': 'I',\n        '\\u24BF': 'J',\n        '\\uFF2A': 'J',\n        '\\u0134': 'J',\n        '\\u0248': 'J',\n        '\\u24C0': 'K',\n        '\\uFF2B': 'K',\n        '\\u1E30': 'K',\n        '\\u01E8': 'K',\n        '\\u1E32': 'K',\n        '\\u0136': 'K',\n        '\\u1E34': 'K',\n        '\\u0198': 'K',\n        '\\u2C69': 'K',\n        '\\uA740': 'K',\n        '\\uA742': 'K',\n        '\\uA744': 'K',\n        '\\uA7A2': 'K',\n        '\\u24C1': 'L',\n        '\\uFF2C': 'L',\n        '\\u013F': 'L',\n        '\\u0139': 'L',\n        '\\u013D': 'L',\n        '\\u1E36': 'L',\n        '\\u1E38': 'L',\n        '\\u013B': 'L',\n        '\\u1E3C': 'L',\n        '\\u1E3A': 'L',\n        '\\u0141': 'L',\n        '\\u023D': 'L',\n        '\\u2C62': 'L',\n        '\\u2C60': 'L',\n        '\\uA748': 'L',\n        '\\uA746': 'L',\n        '\\uA780': 'L',\n        '\\u01C7': 'LJ',\n        '\\u01C8': 'Lj',\n        '\\u24C2': 'M',\n        '\\uFF2D': 'M',\n        '\\u1E3E': 'M',\n        '\\u1E40': 'M',\n        '\\u1E42': 'M',\n        '\\u2C6E': 'M',\n        '\\u019C': 'M',\n        '\\u24C3': 'N',\n        '\\uFF2E': 'N',\n        '\\u01F8': 'N',\n        '\\u0143': 'N',\n        '\\u00D1': 'N',\n        '\\u1E44': 'N',\n        '\\u0147': 'N',\n        '\\u1E46': 'N',\n        '\\u0145': 'N',\n        '\\u1E4A': 'N',\n        '\\u1E48': 'N',\n        '\\u0220': 'N',\n        '\\u019D': 'N',\n        '\\uA790': 'N',\n        '\\uA7A4': 'N',\n        '\\u01CA': 'NJ',\n        '\\u01CB': 'Nj',\n        '\\u24C4': 'O',\n        '\\uFF2F': 'O',\n        '\\u00D2': 'O',\n        '\\u00D3': 'O',\n        '\\u00D4': 'O',\n        '\\u1ED2': 'O',\n        '\\u1ED0': 'O',\n        '\\u1ED6': 'O',\n        '\\u1ED4': 'O',\n        '\\u00D5': 'O',\n        '\\u1E4C': 'O',\n        '\\u022C': 'O',\n        '\\u1E4E': 'O',\n        '\\u014C': 'O',\n        '\\u1E50': 'O',\n        '\\u1E52': 'O',\n        '\\u014E': 'O',\n        '\\u022E': 'O',\n        '\\u0230': 'O',\n        '\\u00D6': 'O',\n        '\\u022A': 'O',\n        '\\u1ECE': 'O',\n        '\\u0150': 'O',\n        '\\u01D1': 'O',\n        '\\u020C': 'O',\n        '\\u020E': 'O',\n        '\\u01A0': 'O',\n        '\\u1EDC': 'O',\n        '\\u1EDA': 'O',\n        '\\u1EE0': 'O',\n        '\\u1EDE': 'O',\n        '\\u1EE2': 'O',\n        '\\u1ECC': 'O',\n        '\\u1ED8': 'O',\n        '\\u01EA': 'O',\n        '\\u01EC': 'O',\n        '\\u00D8': 'O',\n        '\\u01FE': 'O',\n        '\\u0186': 'O',\n        '\\u019F': 'O',\n        '\\uA74A': 'O',\n        '\\uA74C': 'O',\n        '\\u01A2': 'OI',\n        '\\uA74E': 'OO',\n        '\\u0222': 'OU',\n        '\\u24C5': 'P',\n        '\\uFF30': 'P',\n        '\\u1E54': 'P',\n        '\\u1E56': 'P',\n        '\\u01A4': 'P',\n        '\\u2C63': 'P',\n        '\\uA750': 'P',\n        '\\uA752': 'P',\n        '\\uA754': 'P',\n        '\\u24C6': 'Q',\n        '\\uFF31': 'Q',\n        '\\uA756': 'Q',\n        '\\uA758': 'Q',\n        '\\u024A': 'Q',\n        '\\u24C7': 'R',\n        '\\uFF32': 'R',\n        '\\u0154': 'R',\n        '\\u1E58': 'R',\n        '\\u0158': 'R',\n        '\\u0210': 'R',\n        '\\u0212': 'R',\n        '\\u1E5A': 'R',\n        '\\u1E5C': 'R',\n        '\\u0156': 'R',\n        '\\u1E5E': 'R',\n        '\\u024C': 'R',\n        '\\u2C64': 'R',\n        '\\uA75A': 'R',\n        '\\uA7A6': 'R',\n        '\\uA782': 'R',\n        '\\u24C8': 'S',\n        '\\uFF33': 'S',\n        '\\u1E9E': 'S',\n        '\\u015A': 'S',\n        '\\u1E64': 'S',\n        '\\u015C': 'S',\n        '\\u1E60': 'S',\n        '\\u0160': 'S',\n        '\\u1E66': 'S',\n        '\\u1E62': 'S',\n        '\\u1E68': 'S',\n        '\\u0218': 'S',\n        '\\u015E': 'S',\n        '\\u2C7E': 'S',\n        '\\uA7A8': 'S',\n        '\\uA784': 'S',\n        '\\u24C9': 'T',\n        '\\uFF34': 'T',\n        '\\u1E6A': 'T',\n        '\\u0164': 'T',\n        '\\u1E6C': 'T',\n        '\\u021A': 'T',\n        '\\u0162': 'T',\n        '\\u1E70': 'T',\n        '\\u1E6E': 'T',\n        '\\u0166': 'T',\n        '\\u01AC': 'T',\n        '\\u01AE': 'T',\n        '\\u023E': 'T',\n        '\\uA786': 'T',\n        '\\uA728': 'TZ',\n        '\\u24CA': 'U',\n        '\\uFF35': 'U',\n        '\\u00D9': 'U',\n        '\\u00DA': 'U',\n        '\\u00DB': 'U',\n        '\\u0168': 'U',\n        '\\u1E78': 'U',\n        '\\u016A': 'U',\n        '\\u1E7A': 'U',\n        '\\u016C': 'U',\n        '\\u00DC': 'U',\n        '\\u01DB': 'U',\n        '\\u01D7': 'U',\n        '\\u01D5': 'U',\n        '\\u01D9': 'U',\n        '\\u1EE6': 'U',\n        '\\u016E': 'U',\n        '\\u0170': 'U',\n        '\\u01D3': 'U',\n        '\\u0214': 'U',\n        '\\u0216': 'U',\n        '\\u01AF': 'U',\n        '\\u1EEA': 'U',\n        '\\u1EE8': 'U',\n        '\\u1EEE': 'U',\n        '\\u1EEC': 'U',\n        '\\u1EF0': 'U',\n        '\\u1EE4': 'U',\n        '\\u1E72': 'U',\n        '\\u0172': 'U',\n        '\\u1E76': 'U',\n        '\\u1E74': 'U',\n        '\\u0244': 'U',\n        '\\u24CB': 'V',\n        '\\uFF36': 'V',\n        '\\u1E7C': 'V',\n        '\\u1E7E': 'V',\n        '\\u01B2': 'V',\n        '\\uA75E': 'V',\n        '\\u0245': 'V',\n        '\\uA760': 'VY',\n        '\\u24CC': 'W',\n        '\\uFF37': 'W',\n        '\\u1E80': 'W',\n        '\\u1E82': 'W',\n        '\\u0174': 'W',\n        '\\u1E86': 'W',\n        '\\u1E84': 'W',\n        '\\u1E88': 'W',\n        '\\u2C72': 'W',\n        '\\u24CD': 'X',\n        '\\uFF38': 'X',\n        '\\u1E8A': 'X',\n        '\\u1E8C': 'X',\n        '\\u24CE': 'Y',\n        '\\uFF39': 'Y',\n        '\\u1EF2': 'Y',\n        '\\u00DD': 'Y',\n        '\\u0176': 'Y',\n        '\\u1EF8': 'Y',\n        '\\u0232': 'Y',\n        '\\u1E8E': 'Y',\n        '\\u0178': 'Y',\n        '\\u1EF6': 'Y',\n        '\\u1EF4': 'Y',\n        '\\u01B3': 'Y',\n        '\\u024E': 'Y',\n        '\\u1EFE': 'Y',\n        '\\u24CF': 'Z',\n        '\\uFF3A': 'Z',\n        '\\u0179': 'Z',\n        '\\u1E90': 'Z',\n        '\\u017B': 'Z',\n        '\\u017D': 'Z',\n        '\\u1E92': 'Z',\n        '\\u1E94': 'Z',\n        '\\u01B5': 'Z',\n        '\\u0224': 'Z',\n        '\\u2C7F': 'Z',\n        '\\u2C6B': 'Z',\n        '\\uA762': 'Z',\n        '\\u24D0': 'a',\n        '\\uFF41': 'a',\n        '\\u1E9A': 'a',\n        '\\u00E0': 'a',\n        '\\u00E1': 'a',\n        '\\u00E2': 'a',\n        '\\u1EA7': 'a',\n        '\\u1EA5': 'a',\n        '\\u1EAB': 'a',\n        '\\u1EA9': 'a',\n        '\\u00E3': 'a',\n        '\\u0101': 'a',\n        '\\u0103': 'a',\n        '\\u1EB1': 'a',\n        '\\u1EAF': 'a',\n        '\\u1EB5': 'a',\n        '\\u1EB3': 'a',\n        '\\u0227': 'a',\n        '\\u01E1': 'a',\n        '\\u00E4': 'a',\n        '\\u01DF': 'a',\n        '\\u1EA3': 'a',\n        '\\u00E5': 'a',\n        '\\u01FB': 'a',\n        '\\u01CE': 'a',\n        '\\u0201': 'a',\n        '\\u0203': 'a',\n        '\\u1EA1': 'a',\n        '\\u1EAD': 'a',\n        '\\u1EB7': 'a',\n        '\\u1E01': 'a',\n        '\\u0105': 'a',\n        '\\u2C65': 'a',\n        '\\u0250': 'a',\n        '\\uA733': 'aa',\n        '\\u00E6': 'ae',\n        '\\u01FD': 'ae',\n        '\\u01E3': 'ae',\n        '\\uA735': 'ao',\n        '\\uA737': 'au',\n        '\\uA739': 'av',\n        '\\uA73B': 'av',\n        '\\uA73D': 'ay',\n        '\\u24D1': 'b',\n        '\\uFF42': 'b',\n        '\\u1E03': 'b',\n        '\\u1E05': 'b',\n        '\\u1E07': 'b',\n        '\\u0180': 'b',\n        '\\u0183': 'b',\n        '\\u0253': 'b',\n        '\\u24D2': 'c',\n        '\\uFF43': 'c',\n        '\\u0107': 'c',\n        '\\u0109': 'c',\n        '\\u010B': 'c',\n        '\\u010D': 'c',\n        '\\u00E7': 'c',\n        '\\u1E09': 'c',\n        '\\u0188': 'c',\n        '\\u023C': 'c',\n        '\\uA73F': 'c',\n        '\\u2184': 'c',\n        '\\u24D3': 'd',\n        '\\uFF44': 'd',\n        '\\u1E0B': 'd',\n        '\\u010F': 'd',\n        '\\u1E0D': 'd',\n        '\\u1E11': 'd',\n        '\\u1E13': 'd',\n        '\\u1E0F': 'd',\n        '\\u0111': 'd',\n        '\\u018C': 'd',\n        '\\u0256': 'd',\n        '\\u0257': 'd',\n        '\\uA77A': 'd',\n        '\\u01F3': 'dz',\n        '\\u01C6': 'dz',\n        '\\u24D4': 'e',\n        '\\uFF45': 'e',\n        '\\u00E8': 'e',\n        '\\u00E9': 'e',\n        '\\u00EA': 'e',\n        '\\u1EC1': 'e',\n        '\\u1EBF': 'e',\n        '\\u1EC5': 'e',\n        '\\u1EC3': 'e',\n        '\\u1EBD': 'e',\n        '\\u0113': 'e',\n        '\\u1E15': 'e',\n        '\\u1E17': 'e',\n        '\\u0115': 'e',\n        '\\u0117': 'e',\n        '\\u00EB': 'e',\n        '\\u1EBB': 'e',\n        '\\u011B': 'e',\n        '\\u0205': 'e',\n        '\\u0207': 'e',\n        '\\u1EB9': 'e',\n        '\\u1EC7': 'e',\n        '\\u0229': 'e',\n        '\\u1E1D': 'e',\n        '\\u0119': 'e',\n        '\\u1E19': 'e',\n        '\\u1E1B': 'e',\n        '\\u0247': 'e',\n        '\\u025B': 'e',\n        '\\u01DD': 'e',\n        '\\u24D5': 'f',\n        '\\uFF46': 'f',\n        '\\u1E1F': 'f',\n        '\\u0192': 'f',\n        '\\uA77C': 'f',\n        '\\u24D6': 'g',\n        '\\uFF47': 'g',\n        '\\u01F5': 'g',\n        '\\u011D': 'g',\n        '\\u1E21': 'g',\n        '\\u011F': 'g',\n        '\\u0121': 'g',\n        '\\u01E7': 'g',\n        '\\u0123': 'g',\n        '\\u01E5': 'g',\n        '\\u0260': 'g',\n        '\\uA7A1': 'g',\n        '\\u1D79': 'g',\n        '\\uA77F': 'g',\n        '\\u24D7': 'h',\n        '\\uFF48': 'h',\n        '\\u0125': 'h',\n        '\\u1E23': 'h',\n        '\\u1E27': 'h',\n        '\\u021F': 'h',\n        '\\u1E25': 'h',\n        '\\u1E29': 'h',\n        '\\u1E2B': 'h',\n        '\\u1E96': 'h',\n        '\\u0127': 'h',\n        '\\u2C68': 'h',\n        '\\u2C76': 'h',\n        '\\u0265': 'h',\n        '\\u0195': 'hv',\n        '\\u24D8': 'i',\n        '\\uFF49': 'i',\n        '\\u00EC': 'i',\n        '\\u00ED': 'i',\n        '\\u00EE': 'i',\n        '\\u0129': 'i',\n        '\\u012B': 'i',\n        '\\u012D': 'i',\n        '\\u00EF': 'i',\n        '\\u1E2F': 'i',\n        '\\u1EC9': 'i',\n        '\\u01D0': 'i',\n        '\\u0209': 'i',\n        '\\u020B': 'i',\n        '\\u1ECB': 'i',\n        '\\u012F': 'i',\n        '\\u1E2D': 'i',\n        '\\u0268': 'i',\n        '\\u0131': 'i',\n        '\\u24D9': 'j',\n        '\\uFF4A': 'j',\n        '\\u0135': 'j',\n        '\\u01F0': 'j',\n        '\\u0249': 'j',\n        '\\u24DA': 'k',\n        '\\uFF4B': 'k',\n        '\\u1E31': 'k',\n        '\\u01E9': 'k',\n        '\\u1E33': 'k',\n        '\\u0137': 'k',\n        '\\u1E35': 'k',\n        '\\u0199': 'k',\n        '\\u2C6A': 'k',\n        '\\uA741': 'k',\n        '\\uA743': 'k',\n        '\\uA745': 'k',\n        '\\uA7A3': 'k',\n        '\\u24DB': 'l',\n        '\\uFF4C': 'l',\n        '\\u0140': 'l',\n        '\\u013A': 'l',\n        '\\u013E': 'l',\n        '\\u1E37': 'l',\n        '\\u1E39': 'l',\n        '\\u013C': 'l',\n        '\\u1E3D': 'l',\n        '\\u1E3B': 'l',\n        '\\u017F': 'l',\n        '\\u0142': 'l',\n        '\\u019A': 'l',\n        '\\u026B': 'l',\n        '\\u2C61': 'l',\n        '\\uA749': 'l',\n        '\\uA781': 'l',\n        '\\uA747': 'l',\n        '\\u01C9': 'lj',\n        '\\u24DC': 'm',\n        '\\uFF4D': 'm',\n        '\\u1E3F': 'm',\n        '\\u1E41': 'm',\n        '\\u1E43': 'm',\n        '\\u0271': 'm',\n        '\\u026F': 'm',\n        '\\u24DD': 'n',\n        '\\uFF4E': 'n',\n        '\\u01F9': 'n',\n        '\\u0144': 'n',\n        '\\u00F1': 'n',\n        '\\u1E45': 'n',\n        '\\u0148': 'n',\n        '\\u1E47': 'n',\n        '\\u0146': 'n',\n        '\\u1E4B': 'n',\n        '\\u1E49': 'n',\n        '\\u019E': 'n',\n        '\\u0272': 'n',\n        '\\u0149': 'n',\n        '\\uA791': 'n',\n        '\\uA7A5': 'n',\n        '\\u01CC': 'nj',\n        '\\u24DE': 'o',\n        '\\uFF4F': 'o',\n        '\\u00F2': 'o',\n        '\\u00F3': 'o',\n        '\\u00F4': 'o',\n        '\\u1ED3': 'o',\n        '\\u1ED1': 'o',\n        '\\u1ED7': 'o',\n        '\\u1ED5': 'o',\n        '\\u00F5': 'o',\n        '\\u1E4D': 'o',\n        '\\u022D': 'o',\n        '\\u1E4F': 'o',\n        '\\u014D': 'o',\n        '\\u1E51': 'o',\n        '\\u1E53': 'o',\n        '\\u014F': 'o',\n        '\\u022F': 'o',\n        '\\u0231': 'o',\n        '\\u00F6': 'o',\n        '\\u022B': 'o',\n        '\\u1ECF': 'o',\n        '\\u0151': 'o',\n        '\\u01D2': 'o',\n        '\\u020D': 'o',\n        '\\u020F': 'o',\n        '\\u01A1': 'o',\n        '\\u1EDD': 'o',\n        '\\u1EDB': 'o',\n        '\\u1EE1': 'o',\n        '\\u1EDF': 'o',\n        '\\u1EE3': 'o',\n        '\\u1ECD': 'o',\n        '\\u1ED9': 'o',\n        '\\u01EB': 'o',\n        '\\u01ED': 'o',\n        '\\u00F8': 'o',\n        '\\u01FF': 'o',\n        '\\u0254': 'o',\n        '\\uA74B': 'o',\n        '\\uA74D': 'o',\n        '\\u0275': 'o',\n        '\\u01A3': 'oi',\n        '\\u0223': 'ou',\n        '\\uA74F': 'oo',\n        '\\u24DF': 'p',\n        '\\uFF50': 'p',\n        '\\u1E55': 'p',\n        '\\u1E57': 'p',\n        '\\u01A5': 'p',\n        '\\u1D7D': 'p',\n        '\\uA751': 'p',\n        '\\uA753': 'p',\n        '\\uA755': 'p',\n        '\\u24E0': 'q',\n        '\\uFF51': 'q',\n        '\\u024B': 'q',\n        '\\uA757': 'q',\n        '\\uA759': 'q',\n        '\\u24E1': 'r',\n        '\\uFF52': 'r',\n        '\\u0155': 'r',\n        '\\u1E59': 'r',\n        '\\u0159': 'r',\n        '\\u0211': 'r',\n        '\\u0213': 'r',\n        '\\u1E5B': 'r',\n        '\\u1E5D': 'r',\n        '\\u0157': 'r',\n        '\\u1E5F': 'r',\n        '\\u024D': 'r',\n        '\\u027D': 'r',\n        '\\uA75B': 'r',\n        '\\uA7A7': 'r',\n        '\\uA783': 'r',\n        '\\u24E2': 's',\n        '\\uFF53': 's',\n        '\\u00DF': 's',\n        '\\u015B': 's',\n        '\\u1E65': 's',\n        '\\u015D': 's',\n        '\\u1E61': 's',\n        '\\u0161': 's',\n        '\\u1E67': 's',\n        '\\u1E63': 's',\n        '\\u1E69': 's',\n        '\\u0219': 's',\n        '\\u015F': 's',\n        '\\u023F': 's',\n        '\\uA7A9': 's',\n        '\\uA785': 's',\n        '\\u1E9B': 's',\n        '\\u24E3': 't',\n        '\\uFF54': 't',\n        '\\u1E6B': 't',\n        '\\u1E97': 't',\n        '\\u0165': 't',\n        '\\u1E6D': 't',\n        '\\u021B': 't',\n        '\\u0163': 't',\n        '\\u1E71': 't',\n        '\\u1E6F': 't',\n        '\\u0167': 't',\n        '\\u01AD': 't',\n        '\\u0288': 't',\n        '\\u2C66': 't',\n        '\\uA787': 't',\n        '\\uA729': 'tz',\n        '\\u24E4': 'u',\n        '\\uFF55': 'u',\n        '\\u00F9': 'u',\n        '\\u00FA': 'u',\n        '\\u00FB': 'u',\n        '\\u0169': 'u',\n        '\\u1E79': 'u',\n        '\\u016B': 'u',\n        '\\u1E7B': 'u',\n        '\\u016D': 'u',\n        '\\u00FC': 'u',\n        '\\u01DC': 'u',\n        '\\u01D8': 'u',\n        '\\u01D6': 'u',\n        '\\u01DA': 'u',\n        '\\u1EE7': 'u',\n        '\\u016F': 'u',\n        '\\u0171': 'u',\n        '\\u01D4': 'u',\n        '\\u0215': 'u',\n        '\\u0217': 'u',\n        '\\u01B0': 'u',\n        '\\u1EEB': 'u',\n        '\\u1EE9': 'u',\n        '\\u1EEF': 'u',\n        '\\u1EED': 'u',\n        '\\u1EF1': 'u',\n        '\\u1EE5': 'u',\n        '\\u1E73': 'u',\n        '\\u0173': 'u',\n        '\\u1E77': 'u',\n        '\\u1E75': 'u',\n        '\\u0289': 'u',\n        '\\u24E5': 'v',\n        '\\uFF56': 'v',\n        '\\u1E7D': 'v',\n        '\\u1E7F': 'v',\n        '\\u028B': 'v',\n        '\\uA75F': 'v',\n        '\\u028C': 'v',\n        '\\uA761': 'vy',\n        '\\u24E6': 'w',\n        '\\uFF57': 'w',\n        '\\u1E81': 'w',\n        '\\u1E83': 'w',\n        '\\u0175': 'w',\n        '\\u1E87': 'w',\n        '\\u1E85': 'w',\n        '\\u1E98': 'w',\n        '\\u1E89': 'w',\n        '\\u2C73': 'w',\n        '\\u24E7': 'x',\n        '\\uFF58': 'x',\n        '\\u1E8B': 'x',\n        '\\u1E8D': 'x',\n        '\\u24E8': 'y',\n        '\\uFF59': 'y',\n        '\\u1EF3': 'y',\n        '\\u00FD': 'y',\n        '\\u0177': 'y',\n        '\\u1EF9': 'y',\n        '\\u0233': 'y',\n        '\\u1E8F': 'y',\n        '\\u00FF': 'y',\n        '\\u1EF7': 'y',\n        '\\u1E99': 'y',\n        '\\u1EF5': 'y',\n        '\\u01B4': 'y',\n        '\\u024F': 'y',\n        '\\u1EFF': 'y',\n        '\\u24E9': 'z',\n        '\\uFF5A': 'z',\n        '\\u017A': 'z',\n        '\\u1E91': 'z',\n        '\\u017C': 'z',\n        '\\u017E': 'z',\n        '\\u1E93': 'z',\n        '\\u1E95': 'z',\n        '\\u01B6': 'z',\n        '\\u0225': 'z',\n        '\\u0240': 'z',\n        '\\u2C6C': 'z',\n        '\\uA763': 'z',\n        '\\u0386': '\\u0391',\n        '\\u0388': '\\u0395',\n        '\\u0389': '\\u0397',\n        '\\u038A': '\\u0399',\n        '\\u03AA': '\\u0399',\n        '\\u038C': '\\u039F',\n        '\\u038E': '\\u03A5',\n        '\\u03AB': '\\u03A5',\n        '\\u038F': '\\u03A9',\n        '\\u03AC': '\\u03B1',\n        '\\u03AD': '\\u03B5',\n        '\\u03AE': '\\u03B7',\n        '\\u03AF': '\\u03B9',\n        '\\u03CA': '\\u03B9',\n        '\\u0390': '\\u03B9',\n        '\\u03CC': '\\u03BF',\n        '\\u03CD': '\\u03C5',\n        '\\u03CB': '\\u03C5',\n        '\\u03B0': '\\u03C5',\n        '\\u03C9': '\\u03C9',\n        '\\u03C2': '\\u03C3'\n    };\n    DataUtil.fnOperators = {\n        /**\n         * Returns true when the actual input is equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         * @param  {boolean} ignoreAccent?\n         */\n        equal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) === DataUtil.toLowerCase(expected);\n            }\n            return actual === expected;\n        },\n        /**\n         * Returns true when the actual input is not equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        notequal: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            return !DataUtil.fnOperators.equal(actual, expected, ignoreCase);\n        },\n        /**\n         * Returns true when the actual input is less than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) < DataUtil.toLowerCase(expected);\n            }\n            return actual < expected;\n        },\n        /**\n         * Returns true when the actual input is greater than to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthan: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) > DataUtil.toLowerCase(expected);\n            }\n            return actual > expected;\n        },\n        /**\n         * Returns true when the actual input is less than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        lessthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) <= DataUtil.toLowerCase(expected);\n            }\n            return actual <= expected;\n        },\n        /**\n         * Returns true when the actual input is greater than or equal to the given input.\n         * @param  {string|number|boolean} actual\n         * @param  {string|number|boolean} expected\n         * @param  {boolean} ignoreCase?\n         */\n        greaterthanorequal: function (actual, expected, ignoreCase) {\n            if (ignoreCase) {\n                return DataUtil.toLowerCase(actual) >= DataUtil.toLowerCase(expected);\n            }\n            return actual >= expected;\n        },\n        /**\n         * Returns true when the actual input contains the given string.\n         * @param  {string|number} actual\n         * @param  {string|number} expected\n         * @param  {boolean} ignoreCase?\n         */\n        contains: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                    DataUtil.toLowerCase(actual).indexOf(DataUtil.toLowerCase(expected)) !== -1;\n            }\n            return !isNullOrUndefined(actual) && !isNullOrUndefined(expected) &&\n                actual.toString().indexOf(expected) !== -1;\n        },\n        /**\n         * Returns true when the given input value is not null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        notnull: function (actual) {\n            return actual !== null;\n        },\n        /**\n         * Returns true when the given input value is null.\n         * @param  {string|number} actual\n         * @returns boolean\n         */\n        isnull: function (actual) {\n            return actual === null;\n        },\n        /**\n         * Returns true when the actual input starts with the given string\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        startswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.startsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.startsWith(actual, expected);\n        },\n        /**\n         * Returns true when the actual input ends with the given string.\n         * @param  {string} actual\n         * @param  {string} expected\n         * @param  {boolean} ignoreCase?\n         */\n        endswith: function (actual, expected, ignoreCase, ignoreAccent) {\n            if (ignoreAccent) {\n                actual = DataUtil.ignoreDiacritics(actual);\n                expected = DataUtil.ignoreDiacritics(expected);\n            }\n            if (ignoreCase) {\n                return actual && expected && DataUtil.endsWith(DataUtil.toLowerCase(actual), DataUtil.toLowerCase(expected));\n            }\n            return actual && expected && DataUtil.endsWith(actual, expected);\n        },\n        /**\n         * It will return the filter operator based on the filter symbol.\n         * @param  {string} operator\n         * @hidden\n         */\n        processSymbols: function (operator) {\n            var fnName = DataUtil.operatorSymbols[operator];\n            if (fnName) {\n                var fn = DataUtil.fnOperators[fnName];\n                return fn;\n            }\n            return DataUtil.throwError('Query - Process Operator : Invalid operator');\n        },\n        /**\n         * It will return the valid filter operator based on the specified operators.\n         * @param  {string} operator\n         * @hidden\n         */\n        processOperator: function (operator) {\n            var fn = DataUtil.fnOperators[operator];\n            if (fn) {\n                return fn;\n            }\n            return DataUtil.fnOperators.processSymbols(operator);\n        }\n    };\n    /**\n     * To perform the parse operation on JSON data, like convert to string from JSON or convert to JSON from string.\n     */\n    DataUtil.parse = {\n        /**\n         * Parse the given string to the plain JavaScript object.\n         * @param  {string|Object|Object[]} jsonText\n         */\n        parseJson: function (jsonText) {\n            if (typeof jsonText === 'string') {\n                jsonText = JSON.parse(jsonText, DataUtil.parse.jsonReviver);\n            }\n            else if (jsonText instanceof Array) {\n                DataUtil.parse.iterateAndReviveArray(jsonText);\n            }\n            else if (typeof jsonText === 'object') {\n                DataUtil.parse.iterateAndReviveJson(jsonText);\n            }\n            return jsonText;\n        },\n        /**\n         * It will perform on array of values.\n         * @param  {string[]|Object[]} array\n         * @hidden\n         */\n        iterateAndReviveArray: function (array) {\n            for (var i = 0; i < array.length; i++) {\n                if (typeof array[i] === 'object') {\n                    DataUtil.parse.iterateAndReviveJson(array[i]);\n                }\n                else if (typeof array[i] === 'string' && !/^[\\s]*\\[|^[\\s]*\\{|\\\"/g.test(array[i])) {\n                    array[i] = DataUtil.parse.jsonReviver('', array[i]);\n                }\n                else {\n                    array[i] = DataUtil.parse.parseJson(array[i]);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {JSON} json\n         * @hidden\n         */\n        iterateAndReviveJson: function (json) {\n            var value;\n            var keys = Object.keys(json);\n            for (var _i = 0, keys_2 = keys; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.startsWith(prop, '__')) {\n                    continue;\n                }\n                value = json[prop];\n                if (typeof value === 'object') {\n                    if (value instanceof Array) {\n                        DataUtil.parse.iterateAndReviveArray(value);\n                    }\n                    else if (value) {\n                        DataUtil.parse.iterateAndReviveJson(value);\n                    }\n                }\n                else {\n                    json[prop] = DataUtil.parse.jsonReviver(json[prop], value);\n                }\n            }\n        },\n        /**\n         * It will perform on JSON values\n         * @param  {string} field\n         * @param  {string|Date} value\n         * @hidden\n         */\n        jsonReviver: function (field, value) {\n            var dupValue = value;\n            if (typeof value === 'string') {\n                var ms = /^\\/Date\\(([+-]?[0-9]+)([+-][0-9]{4})?\\)\\/$/.exec(value);\n                if (ms) {\n                    return DataUtil.dateParse.toTimeZone(new Date(parseInt(ms[1], 10)), DataUtil.serverTimezoneOffset, true);\n                }\n                else if (/^(\\d{4}\\-\\d\\d\\-\\d\\d([tT][\\d:\\.]*){1})([zZ]|([+\\-])(\\d\\d):?(\\d\\d))?$/.test(value)) {\n                    var arr = dupValue.split(/[^0-9]/);\n                    value = DataUtil.dateParse\n                        .toTimeZone(new Date(parseInt(arr[0], 10), parseInt(arr[1], 10) - 1, parseInt(arr[2], 10), parseInt(arr[3], 10), parseInt(arr[4], 10), parseInt(arr[5], 10)), DataUtil.serverTimezoneOffset, true);\n                }\n            }\n            return value;\n        },\n        /**\n         * Check wheather the given value is JSON or not.\n         * @param  {Object[]} jsonData\n         */\n        isJson: function (jsonData) {\n            if (typeof jsonData[0] === 'string') {\n                return jsonData;\n            }\n            return DataUtil.parse.parseJson(jsonData);\n        },\n        /**\n         * Checks wheather the given value is GUID or not.\n         * @param  {string} value\n         */\n        isGuid: function (value) {\n            var regex = /[A-Fa-f0-9]{8}(?:-[A-Fa-f0-9]{4}){3}-[A-Fa-f0-9]{12}/i;\n            var match = regex.exec(value);\n            return match != null;\n        },\n        /**\n         * The method used to replace the value based on the type.\n         * @param  {Object} value\n         * @param  {boolean} stringify\n         * @hidden\n         */\n        replacer: function (value, stringify) {\n            if (DataUtil.isPlainObject(value)) {\n                return DataUtil.parse.jsonReplacer(value, stringify);\n            }\n            if (value instanceof Array) {\n                return DataUtil.parse.arrayReplacer(value);\n            }\n            if (value instanceof Date) {\n                return DataUtil.parse.jsonReplacer({ val: value }, stringify).val;\n            }\n            return value;\n        },\n        /**\n         * It will replace the JSON value.\n         * @param  {string} key\n         * @param  {Object} val\n         * @hidden\n         */\n        jsonReplacer: function (val, stringify) {\n            var value;\n            var keys = Object.keys(val);\n            for (var _i = 0, keys_3 = keys; _i < keys_3.length; _i++) {\n                var prop = keys_3[_i];\n                value = val[prop];\n                if (!(value instanceof Date)) {\n                    continue;\n                }\n                var d = value;\n                val[prop] = DataUtil.dateParse.toTimeZone(DataUtil.dateParse.addSelfOffset(d), DataUtil.serverTimezoneOffset).toJSON();\n            }\n            return val;\n        },\n        /**\n         * It will replace the Array of value.\n         * @param  {string} key\n         * @param  {Object[]} val\n         * @hidden\n         */\n        arrayReplacer: function (val) {\n            for (var i = 0; i < val.length; i++) {\n                if (DataUtil.isPlainObject(val[i])) {\n                    val[i] = DataUtil.parse.jsonReplacer(val[i]);\n                }\n                else if (val[i] instanceof Date) {\n                    val[i] = DataUtil.parse.jsonReplacer({ date: val[i] }).date;\n                }\n            }\n            return val;\n        }\n    };\n    /**\n     * @hidden\n     */\n    DataUtil.dateParse = {\n        addSelfOffset: function (input) {\n            return new Date(+input - (input.getTimezoneOffset() * 60000));\n        },\n        toUTC: function (input) {\n            return new Date(+input + (input.getTimezoneOffset() * 60000));\n        },\n        toTimeZone: function (input, offset, utc) {\n            if (offset === null) {\n                return input;\n            }\n            var unix = utc ? DataUtil.dateParse.toUTC(input) : input;\n            return new Date(+unix - (offset * 3600000));\n        },\n        toLocalTime: function (input) {\n            var datefn = input;\n            var timeZone = -datefn.getTimezoneOffset();\n            var differenceString = timeZone >= 0 ? '+' : '-';\n            var localtimefn = function (num) {\n                var norm = Math.floor(Math.abs(num));\n                return (norm < 10 ? '0' : '') + norm;\n            };\n            var val = datefn.getFullYear() + '-' + localtimefn(datefn.getMonth() + 1) + '-' + localtimefn(datefn.getDate()) +\n                'T' + localtimefn(datefn.getHours()) +\n                ':' + localtimefn(datefn.getMinutes()) +\n                ':' + localtimefn(datefn.getSeconds()) +\n                differenceString + localtimefn(timeZone / 60) +\n                ':' + localtimefn(timeZone % 60);\n            return val;\n        }\n    };\n    return DataUtil;\n}());\nexport { DataUtil };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { merge, extend, isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query, Predicate } from './query';\n/**\n * Adaptors are specific data source type aware interfaces that are used by DataManager to communicate with DataSource.\n * This is the base adaptor class that other adaptors can extend.\n * @hidden\n */\nvar Adaptor = /** @class */ (function () {\n    function Adaptor(ds) {\n        // common options for all the adaptors \n        this.options = {\n            from: 'table',\n            requestType: 'json',\n            sortBy: 'sorted',\n            select: 'select',\n            skip: 'skip',\n            group: 'group',\n            take: 'take',\n            search: 'search',\n            count: 'requiresCounts',\n            where: 'where',\n            aggregates: 'aggregates'\n        };\n        /**\n         * Specifies the type of adaptor.\n         * @default Adaptor\n         */\n        this.type = Adaptor;\n        this.dataSource = ds;\n        this.pvt = {};\n    }\n    /**\n     * Returns the data from the query processing.\n     * @param  {Object} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @returns Object\n     */\n    Adaptor.prototype.processResponse = function (data, ds, query, xhr) {\n        return data;\n    };\n    return Adaptor;\n}());\nexport { Adaptor };\n/**\n * JsonAdaptor is used to process JSON data. It contains methods to process the given JSON data based on the queries.\n * @hidden\n */\nvar JsonAdaptor = /** @class */ (function (_super) {\n    __extends(JsonAdaptor, _super);\n    function JsonAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the JSON data based on the provided queries.\n     * @param  {DataManager} dataManager\n     * @param  {Query} query\n     * @returns Object\n     */\n    JsonAdaptor.prototype.processQuery = function (dataManager, query) {\n        var result = dataManager.dataSource.json.slice(0);\n        var count = result.length;\n        var countFlg = true;\n        var ret;\n        var key;\n        var agg = {};\n        for (var i = 0; i < query.queries.length; i++) {\n            key = query.queries[i];\n            ret = this[key.fn].call(this, result, key.e, query);\n            if (key.fn === 'onAggregates') {\n                agg[key.e.field + ' - ' + key.e.type] = ret;\n            }\n            else {\n                result = ret !== undefined ? ret : result;\n            }\n            if (key.fn === 'onPage' || key.fn === 'onSkip' || key.fn === 'onTake' || key.fn === 'onRange') {\n                countFlg = false;\n            }\n            if (countFlg) {\n                count = result.length;\n            }\n        }\n        if (query.isCountRequired) {\n            result = {\n                result: result,\n                count: count,\n                aggregates: agg\n            };\n        }\n        return result;\n    };\n    /**\n     * Performs batch update in the JSON array which add, remove and update records.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    JsonAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        var i;\n        for (i = 0; i < changes.addedRecords.length; i++) {\n            this.insert(dm, changes.addedRecords[i]);\n        }\n        for (i = 0; i < changes.changedRecords.length; i++) {\n            this.update(dm, e.key, changes.changedRecords[i]);\n        }\n        for (i = 0; i < changes.deletedRecords.length; i++) {\n            this.remove(dm, e.key, changes.deletedRecords[i]);\n        }\n        return changes;\n    };\n    /**\n     * Performs filter operation with the given data and where query.\n     * @param  {Object[]} ds\n     * @param  {{validate:Function}} e\n     */\n    JsonAdaptor.prototype.onWhere = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.filter(function (obj) {\n            if (e) {\n                return e.validate(obj);\n            }\n        });\n    };\n    /**\n     * Returns aggregate function based on the aggregate type.\n     * @param  {Object[]} ds\n     * @param  {{field:string} e\n     * @param  {string}} type\n     */\n    JsonAdaptor.prototype.onAggregates = function (ds, e) {\n        var fn = DataUtil.aggregates[e.type];\n        if (!ds || !fn || ds.length === 0) {\n            return null;\n        }\n        return fn(ds, e.field);\n    };\n    /**\n     * Performs search operation based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     */\n    JsonAdaptor.prototype.onSearch = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        if (e.fieldNames.length === 0) {\n            DataUtil.getFieldList(ds[0], e.fieldNames);\n        }\n        return ds.filter(function (obj) {\n            for (var j = 0; j < e.fieldNames.length; j++) {\n                if (e.comparer.call(obj, DataUtil.getObject(e.fieldNames[j], obj), e.searchKey, e.ignoreCase, e.ignoreAccent)) {\n                    return true;\n                }\n            }\n            return false;\n        });\n    };\n    /**\n     * Sort the data with given direction and field.\n     * @param  {Object[]} ds\n     * @param  {{comparer:(a:Object} e\n     * @param  {Object} b\n     */\n    JsonAdaptor.prototype.onSortBy = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var fnCompare;\n        var field = DataUtil.getValue(e.fieldName, query);\n        if (!field) {\n            return ds.sort(e.comparer);\n        }\n        if (field instanceof Array) {\n            field = field.slice(0);\n            for (var i = field.length - 1; i >= 0; i--) {\n                if (!field[i]) {\n                    continue;\n                }\n                fnCompare = e.comparer;\n                if (DataUtil.endsWith(field[i], ' desc')) {\n                    fnCompare = DataUtil.fnSort('descending');\n                    field[i] = field[i].replace(' desc', '');\n                }\n                ds = DataUtil.sort(ds, field[i], fnCompare);\n            }\n            return ds;\n        }\n        return DataUtil.sort(ds, field, e.comparer);\n    };\n    /**\n     * Group the data based on the given query.\n     * @param  {Object[]} ds\n     * @param  {QueryOptions} e\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onGroup = function (ds, e, query) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        var aggQuery = Query.filterQueries(query.queries, 'onAggregates');\n        var agg = [];\n        if (aggQuery.length) {\n            var tmp = void 0;\n            for (var i = 0; i < aggQuery.length; i++) {\n                tmp = aggQuery[i].e;\n                agg.push({ type: tmp.type, field: DataUtil.getValue(tmp.field, query) });\n            }\n        }\n        return DataUtil.group(ds, DataUtil.getValue(e.fieldName, query), agg, null, null, e.comparer);\n    };\n    /**\n     * Retrieves records based on the given page index and size.\n     * @param  {Object[]} ds\n     * @param  {{pageSize:number} e\n     * @param  {number}} pageIndex\n     * @param  {Query} query\n     */\n    JsonAdaptor.prototype.onPage = function (ds, e, query) {\n        var size = DataUtil.getValue(e.pageSize, query);\n        var start = (DataUtil.getValue(e.pageIndex, query) - 1) * size;\n        var end = start + size;\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(start, end);\n    };\n    /**\n     * Retrieves records based on the given start and end index from query.\n     * @param  {Object[]} ds\n     * @param  {{start:number} e\n     * @param  {number}} end\n     */\n    JsonAdaptor.prototype.onRange = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.start), DataUtil.getValue(e.end));\n    };\n    /**\n     * Picks the given count of records from the top of the datasource.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onTake = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(0, DataUtil.getValue(e.nos));\n    };\n    /**\n     * Skips the given count of records from the data source.\n     * @param  {Object[]} ds\n     * @param  {{nos:number}} e\n     */\n    JsonAdaptor.prototype.onSkip = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return ds.slice(DataUtil.getValue(e.nos));\n    };\n    /**\n     * Selects specified columns from the data source.\n     * @param  {Object[]} ds\n     * @param  {{fieldNames:string}} e\n     */\n    JsonAdaptor.prototype.onSelect = function (ds, e) {\n        if (!ds || !ds.length) {\n            return ds;\n        }\n        return DataUtil.select(ds, DataUtil.getValue(e.fieldNames));\n    };\n    /**\n     * Inserts new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {number} position\n     */\n    JsonAdaptor.prototype.insert = function (dm, data, tableName, query, position) {\n        if (isNullOrUndefined(position)) {\n            return dm.dataSource.json.push(data);\n        }\n        else {\n            return dm.dataSource.json.splice(position, 0, data);\n        }\n    };\n    /**\n     * Remove the data from the dataSource based on the key field value.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        if (typeof value === 'object') {\n            value = value[keyField];\n        }\n        for (i = 0; i < ds.length; i++) {\n            if (ds[i][keyField] === value) {\n                break;\n            }\n        }\n        return i !== ds.length ? ds.splice(i, 1) : null;\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns null\n     */\n    JsonAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        var ds = dm.dataSource.json;\n        var i;\n        var key = value[keyField];\n        for (i = 0; i < ds.length; i++) {\n            if (ds[i][keyField] === key) {\n                break;\n            }\n        }\n        return i < ds.length ? merge(ds[i], value) : null;\n    };\n    return JsonAdaptor;\n}(Adaptor));\nexport { JsonAdaptor };\n/**\n * URL Adaptor of DataManager can be used when you are required to use remote service to retrieve data.\n * It interacts with server-side for all DataManager Queries and CRUD operations.\n * @hidden\n */\nvar UrlAdaptor = /** @class */ (function (_super) {\n    __extends(UrlAdaptor, _super);\n    function UrlAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Process the query to generate request body.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns p\n     */\n    UrlAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var params = query.params;\n        var url = dm.dataSource.url;\n        var temp;\n        var skip;\n        var take = null;\n        var options = this.options;\n        var request = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        // calc Paging & Range\n        if ('onPage' in singles) {\n            temp = singles.onPage;\n            skip = DataUtil.getValue(temp.pageIndex, query);\n            take = DataUtil.getValue(temp.pageSize, query);\n            skip = (skip - 1) * take;\n        }\n        else if ('onRange' in singles) {\n            temp = singles.onRange;\n            skip = temp.start;\n            take = temp.end - temp.start;\n        }\n        // Sorting\n        for (var i = 0; i < queries.sorts.length; i++) {\n            temp = DataUtil.getValue(queries.sorts[i].e.fieldName, query);\n            request.sorts.push(DataUtil.callAdaptorFunction(this, 'onEachSort', { name: temp, direction: queries.sorts[i].e.direction }, query));\n        }\n        // hierarchy\n        if (hierarchyFilters) {\n            temp = this.getFiltersFrom(hierarchyFilters, query);\n            if (temp) {\n                request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', temp.toJson(), query));\n            }\n        }\n        // Filters\n        for (var i = 0; i < queries.filters.length; i++) {\n            request.filters.push(DataUtil.callAdaptorFunction(this, 'onEachWhere', queries.filters[i].e.toJson(), query));\n            var keys_1 = typeof request.filters[i] === 'object' ? Object.keys(request.filters[i]) : [];\n            for (var _i = 0, keys_2 = keys_1; _i < keys_2.length; _i++) {\n                var prop = keys_2[_i];\n                if (DataUtil.isNull((request)[prop])) {\n                    delete request[prop];\n                }\n            }\n        }\n        // Searches\n        for (var i = 0; i < queries.searches.length; i++) {\n            temp = queries.searches[i].e;\n            request.searches.push(DataUtil.callAdaptorFunction(this, 'onEachSearch', {\n                fields: temp.fieldNames,\n                operator: temp.operator,\n                key: temp.searchKey,\n                ignoreCase: temp.ignoreCase\n            }, query));\n        }\n        // Grouping\n        for (var i = 0; i < queries.groups.length; i++) {\n            request.groups.push(DataUtil.getValue(queries.groups[i].e.fieldName, query));\n        }\n        // aggregates\n        for (var i = 0; i < queries.aggregates.length; i++) {\n            temp = queries.aggregates[i].e;\n            request.aggregates.push({ type: temp.type, field: DataUtil.getValue(temp.field, query) });\n        }\n        var req = {};\n        this.getRequestQuery(options, query, singles, request, req);\n        // Params\n        DataUtil.callAdaptorFunction(this, 'addParams', { dm: dm, query: query, params: params, reqParams: req });\n        // cleanup\n        var keys = Object.keys(req);\n        for (var _a = 0, keys_3 = keys; _a < keys_3.length; _a++) {\n            var prop = keys_3[_a];\n            if (DataUtil.isNull(req[prop]) || req[prop] === '' || req[prop].length === 0) {\n                delete req[prop];\n            }\n        }\n        if (!(options.skip in req && options.take in req) && take !== null) {\n            req[options.skip] = DataUtil.callAdaptorFunction(this, 'onSkip', skip, query);\n            req[options.take] = DataUtil.callAdaptorFunction(this, 'onTake', take, query);\n        }\n        var p = this.pvt;\n        this.pvt = {};\n        if (this.options.requestType === 'json') {\n            return {\n                data: JSON.stringify(req),\n                url: url,\n                pvtData: p,\n                type: 'POST',\n                contentType: 'application/json; charset=utf-8'\n            };\n        }\n        temp = this.convertToQueryString(req, query, dm);\n        temp = (dm.dataSource.url.indexOf('?') !== -1 ? '&' : '/') + temp;\n        return {\n            type: 'GET', url: temp.length ? url.replace(/\\/*$/, temp) : url, pvtData: p\n        };\n    };\n    UrlAdaptor.prototype.getRequestQuery = function (options, query, singles, request, request1) {\n        var param = 'param';\n        var req = request1;\n        req[options.from] = query.fromTable;\n        if (options.expand) {\n            req[options.expand] = 'onExpand' in this && 'onSelect' in singles ?\n                DataUtil.callAdaptorFunction(this, 'onExpand', { selects: DataUtil.getValue(singles.onSelect.fieldNames, query), expands: query.expands }, query) : query.expands;\n        }\n        req[options.select] = 'onSelect' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSelect', DataUtil.getValue(singles.onSelect.fieldNames, query), query) : '';\n        req[options.count] = query.isCountRequired ? DataUtil.callAdaptorFunction(this, 'onCount', query.isCountRequired, query) : '';\n        req[options.search] = request.searches.length ? DataUtil.callAdaptorFunction(this, 'onSearch', request.searches, query) : '';\n        req[options.skip] = 'onSkip' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onSkip', DataUtil.getValue(singles.onSkip.nos, query), query) : '';\n        req[options.take] = 'onTake' in singles ?\n            DataUtil.callAdaptorFunction(this, 'onTake', DataUtil.getValue(singles.onTake.nos, query), query) : '';\n        req[options.where] = request.filters.length || request.searches.length ?\n            DataUtil.callAdaptorFunction(this, 'onWhere', request.filters, query) : '';\n        req[options.sortBy] = request.sorts.length ? DataUtil.callAdaptorFunction(this, 'onSortBy', request.sorts, query) : '';\n        req[options.group] = request.groups.length ? DataUtil.callAdaptorFunction(this, 'onGroup', request.groups, query) : '';\n        req[options.aggregates] = request.aggregates.length ?\n            DataUtil.callAdaptorFunction(this, 'onAggregates', request.aggregates, query) : '';\n        req[param] = [];\n    };\n    /**\n     * Convert the object from processQuery to string which can be added query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     */\n    UrlAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        return '';\n        // this needs to be overridden\n    };\n    /**\n     * Return the data from the data manager processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Object} request?\n     * @param  {CrudOptions} changes?\n     */\n    UrlAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var requests = request;\n        var pvt = requests.pvtData || {};\n        var groupDs = data.groupDs;\n        if (xhr && xhr.getResponseHeader('Content-Type') &&\n            xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        var d = JSON.parse(requests.data);\n        if (d && d.action === 'batch' && data.addedRecords) {\n            changes.addedRecords = data.addedRecords;\n            return changes;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        var args = {};\n        if ('count' in data) {\n            args.count = data.count;\n        }\n        args.result = data.result ? data.result : data;\n        this.getAggregateResult(pvt, data, args, groupDs, query);\n        return DataUtil.isNull(args.count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Add the group query to the adaptor`s option.\n     * @param  {Object[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return e;\n    };\n    /**\n     * Add the aggregate query to the adaptor`s option.\n     * @param  {Aggregates[]} e\n     * @returns void\n     */\n    UrlAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {Object} e\n     */\n    UrlAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var url;\n        var key;\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.removeUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify({\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e[url],\n                key: e[key]\n            })\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @returns void\n     */\n    UrlAdaptor.prototype.beforeSend = function (dm, request) {\n        // need to extend this method\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify({\n                value: data,\n                table: tableName,\n                action: 'insert'\n            })\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number|string} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify({\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            })\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    UrlAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify({\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: value[keyField],\n                table: tableName\n            })\n        };\n    };\n    /**\n     * To generate the predicate based on the filtered query.\n     * @param  {Object[]|string[]|number[]} data\n     * @param  {Query} query\n     * @hidden\n     */\n    UrlAdaptor.prototype.getFiltersFrom = function (data, query) {\n        var key = query.fKey;\n        var value;\n        var prop = key;\n        var pKey = query.key;\n        var predicats = [];\n        if (typeof data[0] !== 'object') {\n            prop = null;\n        }\n        for (var i = 0; i < data.length; i++) {\n            if (typeof data[0] === 'object') {\n                value = DataUtil.getObject(pKey || prop, data[i]);\n            }\n            else {\n                value = data[i];\n            }\n            predicats.push(new Predicate(key, 'equal', value));\n        }\n        return Predicate.or(predicats);\n    };\n    UrlAdaptor.prototype.getAggregateResult = function (pvt, data, args, groupDs, query) {\n        var pData = data;\n        if (data && data.result) {\n            pData = data.result;\n        }\n        if (pvt && pvt.aggregates && pvt.aggregates.length) {\n            var agg = pvt.aggregates;\n            var fn = void 0;\n            var aggregateData = pData;\n            var res = {};\n            if (data.aggregate) {\n                aggregateData = data.aggregate;\n            }\n            for (var i = 0; i < agg.length; i++) {\n                fn = DataUtil.aggregates[agg[i].type];\n                if (fn) {\n                    res[agg[i].field + ' - ' + agg[i].type] = fn(aggregateData, agg[i].field);\n                }\n            }\n            args.aggregates = res;\n        }\n        if (pvt && pvt.groups && pvt.groups.length) {\n            var groups = pvt.groups;\n            for (var i = 0; i < groups.length; i++) {\n                var level = null;\n                if (!isNullOrUndefined(groupDs)) {\n                    groupDs = DataUtil.group(groupDs, groups[i]);\n                }\n                var groupQuery = Query.filterQueries(query.queries, 'onGroup')[i].e;\n                pData = DataUtil.group(pData, groups[i], pvt.aggregates, level, groupDs, groupQuery.comparer);\n            }\n            args.result = pData;\n        }\n        return args;\n    };\n    UrlAdaptor.prototype.getQueryRequest = function (query) {\n        var req = { sorts: [], groups: [], filters: [], searches: [], aggregates: [] };\n        req.sorts = Query.filterQueries(query.queries, 'onSortBy');\n        req.groups = Query.filterQueries(query.queries, 'onGroup');\n        req.filters = Query.filterQueries(query.queries, 'onWhere');\n        req.searches = Query.filterQueries(query.queries, 'onSearch');\n        req.aggregates = Query.filterQueries(query.queries, 'onAggregates');\n        return req;\n    };\n    UrlAdaptor.prototype.addParams = function (options) {\n        var req = options.reqParams;\n        if (options.params.length) {\n            req.params = {};\n        }\n        for (var _i = 0, _a = options.params; _i < _a.length; _i++) {\n            var tmp = _a[_i];\n            if (req[tmp.key]) {\n                throw new Error('Query() - addParams: Custom Param is conflicting other request arguments');\n            }\n            req[tmp.key] = tmp.value;\n            if (tmp.fn) {\n                req[tmp.key] = tmp.fn.call(options.query, tmp.key, options.query, options.dm);\n            }\n            req.params[tmp.key] = req[tmp.key];\n        }\n    };\n    return UrlAdaptor;\n}(Adaptor));\nexport { UrlAdaptor };\n/**\n * OData Adaptor that is extended from URL Adaptor, is used for consuming data through OData Service.\n * @hidden\n */\nvar ODataAdaptor = /** @class */ (function (_super) {\n    __extends(ODataAdaptor, _super);\n    function ODataAdaptor(props) {\n        var _this = _super.call(this) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json;odata=light;q=1,application/json;odata=verbose;q=0.5',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$inlinecount',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PUT'\n        });\n        _this.getModuleName = getValue('getModulename', _this);\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var operator;\n        var guid;\n        var val = predicate.value;\n        var type = typeof val;\n        var field = predicate.field ? ODataAdaptor.getField(predicate.field) : null;\n        if (val instanceof Date) {\n            val = 'datetime\\'' + DataUtil.parse.replacer(val) + '\\'';\n        }\n        if (type === 'string') {\n            val = '\\'' + val + '\\'';\n            if (requiresCast) {\n                field = 'cast(' + field + ', \\'Edm.String\\')';\n            }\n            if (DataUtil.parse.isGuid(val)) {\n                guid = 'guid';\n            }\n            if (predicate.ignoreCase) {\n                if (!guid) {\n                    field = 'tolower(' + field + ')';\n                }\n                val = val.toLowerCase();\n            }\n        }\n        operator = DataUtil.odBiOperator[predicate.operator];\n        if (operator) {\n            returnValue += field;\n            returnValue += operator;\n            if (guid) {\n                returnValue += guid;\n            }\n            return returnValue + val;\n        }\n        if (!isNullOrUndefined(this.getModuleName)) {\n            if (this.getModuleName() === 'ODataV4Adaptor') {\n                operator = DataUtil.odv4UniOperator[predicate.operator];\n            }\n        }\n        else {\n            operator = DataUtil.odUniOperator[predicate.operator];\n        }\n        if (operator === 'substringof') {\n            var temp = val;\n            val = field;\n            field = temp;\n        }\n        returnValue += operator + '(';\n        returnValue += field + ',';\n        if (guid) {\n            returnValue += guid;\n        }\n        returnValue += val + ')';\n        return returnValue;\n    };\n    ODataAdaptor.prototype.addParams = function (options) {\n        _super.prototype.addParams.call(this, options);\n        delete options.reqParams.params;\n    };\n    /**\n     * Generate request string based on the multiple filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onComplexPredicate = function (predicate, query, requiresCast) {\n        var res = [];\n        for (var i = 0; i < predicate.predicates.length; i++) {\n            res.push('(' + this.onEachWhere(predicate.predicates[i], query, requiresCast) + ')');\n        }\n        return res.join(' ' + predicate.condition + ' ');\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {Predicate} filter\n     * @param  {boolean} requiresCast?\n     */\n    ODataAdaptor.prototype.onEachWhere = function (filter, query, requiresCast) {\n        return filter.isComplex ? this.onComplexPredicate(filter, query, requiresCast) : this.onPredicate(filter, query, requiresCast);\n    };\n    /**\n     * Generate query string based on the multiple filter criteria from query.\n     * @param  {string[]} filters\n     */\n    ODataAdaptor.prototype.onWhere = function (filters) {\n        if (this.pvt.search) {\n            filters.push(this.onEachWhere(this.pvt.search, null, true));\n        }\n        return filters.join(' and ');\n    };\n    /**\n     * Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataAdaptor.prototype.onEachSearch = function (e) {\n        if (e.fields && e.fields.length === 0) {\n            DataUtil.throwError('Query() - Search : oData search requires list of field names to search');\n        }\n        var filter = this.pvt.search || [];\n        for (var i = 0; i < e.fields.length; i++) {\n            filter.push(new Predicate(e.fields[i], e.operator, e.key, e.ignoreCase));\n        }\n        this.pvt.search = filter;\n    };\n    /**\n     * Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataAdaptor.prototype.onSearch = function (e) {\n        this.pvt.search = Predicate.or(this.pvt.search);\n        return '';\n    };\n    /**\n     * Generate query string based on multiple sort criteria from query.\n     * @param  {QueryOptions} e\n     */\n    ODataAdaptor.prototype.onEachSort = function (e) {\n        var res = [];\n        if (e.name instanceof Array) {\n            for (var i = 0; i < e.name.length; i++) {\n                res.push(ODataAdaptor.getField(e.name[i]) + (e.direction === 'descending' ? ' desc' : ''));\n            }\n        }\n        else {\n            res.push(ODataAdaptor.getField(e.name) + (e.direction === 'descending' ? ' desc' : ''));\n        }\n        return res.join(',');\n    };\n    /**\n     * Returns sort query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSortBy = function (e) {\n        return e.reverse().join(',');\n    };\n    /**\n     * Adds the group query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onGroup = function (e) {\n        this.pvt.groups = e;\n        return [];\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataAdaptor.prototype.onSelect = function (e) {\n        for (var i = 0; i < e.length; i++) {\n            e[i] = ODataAdaptor.getField(e[i]);\n        }\n        return e.join(',');\n    };\n    /**\n     * Add the aggregate query to the adaptor option.\n     * @param  {Object[]} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onAggregates = function (e) {\n        this.pvt.aggregates = e;\n        return '';\n    };\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataAdaptor.prototype.onCount = function (e) {\n        return e === true ? 'allpages' : '';\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    ODataAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.options.multipartAccept);\n            request.setRequestHeader('DataServiceVersion', '2.0');\n            request.overrideMimeType('text/plain; charset=x-user-defined');\n        }\n        else {\n            request.setRequestHeader('Accept', this.options.accept);\n        }\n        request.setRequestHeader('DataServiceVersion', '2.0');\n        request.setRequestHeader('MaxDataServiceVersion', '2.0');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        if (!isNullOrUndefined(data.d)) {\n            var dataCopy = ((query && query.isCountRequired) ? data.d.results : data.d);\n            var metaData = '__metadata';\n            if (!isNullOrUndefined(dataCopy)) {\n                for (var i = 0; i < dataCopy.length; i++) {\n                    if (!isNullOrUndefined(dataCopy[i][metaData])) {\n                        delete dataCopy[i][metaData];\n                    }\n                }\n            }\n        }\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = this.processBatchResponse(data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n        var count = null;\n        var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n        if (query && query.isCountRequired) {\n            var oDataCount = '__count';\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n            if (data.d) {\n                data = data.d;\n            }\n            if (data[oDataCount] || data['odata.count']) {\n                count = data[oDataCount] || data['odata.count'];\n            }\n        }\n        if (version === 3 && data.value) {\n            data = data.value;\n        }\n        if (data.d) {\n            data = data.d;\n        }\n        if (version < 3 && data.results) {\n            data = data.results;\n        }\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    /**\n     * Converts the request object to query string.\n     * @param  {Object} req\n     * @param  {Query} query\n     * @param  {DataManager} dm\n     * @returns tableName\n     */\n    ODataAdaptor.prototype.convertToQueryString = function (request, query, dm) {\n        var res = [];\n        var table = 'table';\n        var tableName = request[table] || '';\n        var format = '$format';\n        delete request[table];\n        if (dm.dataSource.requiresFormat) {\n            request[format] = 'json';\n        }\n        var keys = Object.keys(request);\n        for (var _i = 0, keys_4 = keys; _i < keys_4.length; _i++) {\n            var prop = keys_4[_i];\n            res.push(prop + '=' + request[prop]);\n        }\n        res = res.join('&');\n        if (dm.dataSource.url && dm.dataSource.url.indexOf('?') !== -1 && !tableName) {\n            return res;\n        }\n        return res.length ? tableName + '?' + res : tableName || '';\n    };\n    ODataAdaptor.prototype.localTimeReplacer = function (key, convertObj) {\n        for (var _i = 0, _a = !isNullOrUndefined(convertObj) ? Object.keys(convertObj) : []; _i < _a.length; _i++) {\n            var prop = _a[_i];\n            if ((convertObj[prop] instanceof Date)) {\n                convertObj[prop] = DataUtil.dateParse.toLocalTime(convertObj[prop]);\n            }\n        }\n        return convertObj;\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            url: dm.dataSource.url.replace(/\\/*$/, tableName ? '/' + tableName : ''),\n            data: JSON.stringify(data, this.options.localTime ? this.localTimeReplacer : null)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    ODataAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        var url;\n        if (typeof value === 'string') {\n            url = \"('\" + value + \"')\";\n        }\n        else {\n            url = \"(\" + value + \")\";\n        }\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url.replace(/\\/*$/, tableName ? '/' + tableName : '') + url\n        };\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     * @returns this\n     */\n    ODataAdaptor.prototype.update = function (dm, keyField, value, tableName, query, original) {\n        if (this.options.updateType === 'PATCH' && !isNullOrUndefined(original)) {\n            value = this.compareAndRemove(value, original, keyField);\n        }\n        var url;\n        if (typeof value[keyField] === 'string') {\n            url = \"('\" + value[keyField] + \"')\";\n        }\n        else {\n            url = \"(\" + value[keyField] + \")\";\n        }\n        return {\n            type: this.options.updateType,\n            url: dm.dataSource.url.replace(/\\/*$/, tableName ? '/' + tableName : '') + url,\n            data: JSON.stringify(value, this.options.localTime ? this.localTimeReplacer : null),\n            accept: this.options.accept\n        };\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     * @returns {Object}\n     */\n    ODataAdaptor.prototype.batchRequest = function (dm, changes, e, query, original) {\n        var initialGuid = e.guid = DataUtil.getGuid(this.options.batchPre);\n        var url = dm.dataSource.url.replace(/\\/*$/, '/' + this.options.batch);\n        var args = {\n            url: e.url,\n            key: e.key,\n            cid: 1,\n            cSet: DataUtil.getGuid(this.options.changeSet)\n        };\n        var req = '--' + initialGuid + '\\n';\n        req += 'Content-Type: multipart/mixed; boundary=' + args.cSet.replace('--', '') + '\\n';\n        this.pvt.changeSet = 0;\n        req += this.generateInsertRequest(changes.addedRecords, args);\n        req += this.generateUpdateRequest(changes.changedRecords, args, original ? original.changedRecords : []);\n        req += this.generateDeleteRequest(changes.deletedRecords, args);\n        req += args.cSet + '--\\n';\n        req += '--' + initialGuid + '--';\n        return {\n            type: 'POST',\n            url: url,\n            dataType: 'json',\n            contentType: 'multipart/mixed; charset=UTF-8;boundary=' + initialGuid,\n            data: req\n        };\n    };\n    /**\n     * Generate the string content from the removed records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     * @returns this\n     */\n    ODataAdaptor.prototype.generateDeleteRequest = function (arr, e) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'DELETE ',\n            'url': function (data, i, key) { return '(' + data[i][key] + ')'; },\n            'data': function (data, i) { return ''; }\n        };\n        req = this.generateBodyContent(arr, e, stat);\n        return req + '\\n';\n    };\n    /**\n     * Generate the string content from the inserted records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateInsertRequest = function (arr, e) {\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        var stat = {\n            'method': 'POST ',\n            'url': function (data, i, key) { return ''; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat);\n        return req;\n    };\n    /**\n     * Generate the string content from the updated records.\n     * The result will be send during batch update.\n     * @param  {Object[]} arr\n     * @param  {RemoteArgs} e\n     */\n    ODataAdaptor.prototype.generateUpdateRequest = function (arr, e, org) {\n        var _this = this;\n        if (!arr) {\n            return '';\n        }\n        var req = '';\n        arr.forEach(function (change) { return change = _this.compareAndRemove(change, org.filter(function (o) { return DataUtil.getObject(e.key, o) === DataUtil.getObject(e.key, change); })[0], e.key); });\n        var stat = {\n            'method': this.options.updateType + ' ',\n            'url': function (data, i, key) { return '(' + data[i][key] + ')'; },\n            'data': function (data, i) { return JSON.stringify(data[i]) + '\\n\\n'; }\n        };\n        req = this.generateBodyContent(arr, e, stat);\n        return req;\n    };\n    ODataAdaptor.getField = function (prop) {\n        return prop.replace(/\\./g, '/');\n    };\n    ODataAdaptor.prototype.generateBodyContent = function (arr, e, stat) {\n        var req = '';\n        for (var i = 0; i < arr.length; i++) {\n            req += '\\n' + e.cSet + '\\n';\n            req += this.options.changeSetContent + '\\n\\n';\n            req += stat.method;\n            req += e.url + stat.url(arr, i, e.key) + ' HTTP/1.1\\n';\n            req += 'Accept: ' + this.options.accept + '\\n';\n            req += 'Content-Id: ' + this.pvt.changeSet++ + '\\n';\n            req += this.options.batchChangeSetContentType + '\\n';\n            if (!isNullOrUndefined(arr[i]['@odata.etag'])) {\n                req += 'If-Match: ' + arr[i]['@odata.etag'] + '\\n\\n';\n                delete arr[i]['@odata.etag'];\n            }\n            else {\n                req += '\\n';\n            }\n            req += stat.data(arr, i);\n        }\n        return req;\n    };\n    ODataAdaptor.prototype.processBatchResponse = function (data, query, xhr, request, changes) {\n        if (xhr && xhr.getResponseHeader('Content-Type') && xhr.getResponseHeader('Content-Type').indexOf('xml') !== -1) {\n            return (query.isCountRequired ? { result: [], count: 0 } : []);\n        }\n        if (request && this.options.batch && DataUtil.endsWith(request.url, this.options.batch) && request.type.toLowerCase() === 'post') {\n            var guid = xhr.getResponseHeader('Content-Type');\n            var cIdx = void 0;\n            var jsonObj = void 0;\n            var d = data + '';\n            guid = guid.substring(guid.indexOf('=batchresponse') + 1);\n            d = d.split(guid);\n            if (d.length < 2) {\n                return {};\n            }\n            d = d[1];\n            var exVal = /(?:\\bContent-Type.+boundary=)(changesetresponse.+)/i.exec(d);\n            if (exVal) {\n                d.replace(exVal[0], '');\n            }\n            var changeGuid = exVal ? exVal[1] : '';\n            d = d.split(changeGuid);\n            for (var i = d.length; i > -1; i--) {\n                if (!/\\bContent-ID:/i.test(d[i]) || !/\\bHTTP.+201/.test(d[i])) {\n                    continue;\n                }\n                cIdx = parseInt(/\\bContent-ID: (\\d+)/i.exec(d[i])[1], 10);\n                if (changes.addedRecords[cIdx]) {\n                    jsonObj = DataUtil.parse.parseJson(/^\\{.+\\}/m.exec(d[i])[0]);\n                    extend({}, changes.addedRecords[cIdx], this.processResponse(jsonObj));\n                }\n            }\n            return changes;\n        }\n        return null;\n    };\n    ODataAdaptor.prototype.compareAndRemove = function (data, original, key) {\n        var _this = this;\n        if (isNullOrUndefined(original)) {\n            return data;\n        }\n        Object.keys(data).forEach(function (prop) {\n            if (prop !== key && prop !== '@odata.etag') {\n                if (DataUtil.isPlainObject(data[prop])) {\n                    _this.compareAndRemove(data[prop], original[prop]);\n                    if (Object.keys(data[prop]).length === 0) {\n                        delete data[prop];\n                    }\n                }\n                else if (data[prop] === original[prop]) {\n                    delete data[prop];\n                }\n                else if (data[prop] && original[prop] && data[prop].valueOf() === original[prop].valueOf()) {\n                    delete data[prop];\n                }\n            }\n        });\n        return data;\n    };\n    return ODataAdaptor;\n}(UrlAdaptor));\nexport { ODataAdaptor };\n/**\n * The OData v4 is an improved version of OData protocols.\n * The DataManager uses the ODataV4Adaptor to consume OData v4 services.\n * @hidden\n */\nvar ODataV4Adaptor = /** @class */ (function (_super) {\n    __extends(ODataV4Adaptor, _super);\n    function ODataV4Adaptor(props) {\n        var _this = _super.call(this, props) || this;\n        // options replaced the default adaptor options\n        _this.options = extend({}, _this.options, {\n            requestType: 'get',\n            accept: 'application/json, text/javascript, */*; q=0.01',\n            multipartAccept: 'multipart/mixed',\n            sortBy: '$orderby',\n            select: '$select',\n            skip: '$skip',\n            take: '$top',\n            count: '$count',\n            search: '$search',\n            where: '$filter',\n            expand: '$expand',\n            batch: '$batch',\n            changeSet: '--changeset_',\n            batchPre: 'batch_',\n            contentId: 'Content-Id: ',\n            batchContent: 'Content-Type: multipart/mixed; boundary=',\n            changeSetContent: 'Content-Type: application/http\\nContent-Transfer-Encoding: binary ',\n            batchChangeSetContentType: 'Content-Type: application/json; charset=utf-8 ',\n            updateType: 'PATCH',\n            localTime: false\n        });\n        getValue('getModulename', _this.getModulename());\n        extend(_this.options, props || {});\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    ODataV4Adaptor.prototype.getModulename = function () {\n        return 'ODataV4Adaptor';\n    };\n    ;\n    /**\n     * Returns the query string which requests total count from the data source.\n     * @param  {boolean} e\n     * @returns string\n     */\n    ODataV4Adaptor.prototype.onCount = function (e) {\n        return e === true ? 'true' : '';\n    };\n    /**\n     * Generate request string based on the filter criteria from query.\n     * @param  {Predicate} pred\n     * @param  {boolean} requiresCast?\n     */\n    ODataV4Adaptor.prototype.onPredicate = function (predicate, query, requiresCast) {\n        var returnValue = '';\n        var val = predicate.value;\n        var isDate = val instanceof Date;\n        returnValue = _super.prototype.onPredicate.call(this, predicate, query, requiresCast);\n        if (isDate) {\n            returnValue = returnValue.replace(/datetime'(.*)'$/, '$1');\n        }\n        return returnValue;\n    };\n    /**\n     *  Generate query string based on the multiple search criteria from query.\n     * @param  {{fields:string[]} e\n     * @param  {string} operator\n     * @param  {string} key\n     * @param  {boolean}} ignoreCase\n     */\n    ODataV4Adaptor.prototype.onEachSearch = function (e) {\n        var search = this.pvt.searches || [];\n        search.push(e.key);\n        this.pvt.searches = search;\n    };\n    /**\n     *  Generate query string based on the search criteria from query.\n     * @param  {Object} e\n     */\n    ODataV4Adaptor.prototype.onSearch = function (e) {\n        return this.pvt.searches.join(' OR ');\n    };\n    /**\n     * Returns the expand query string.\n     * @param  {string} e\n     */\n    ODataV4Adaptor.prototype.onExpand = function (e) {\n        var _this = this;\n        var selected = {};\n        var expanded = {};\n        var expands = e.expands.slice();\n        var exArr = [];\n        var selects = e.selects.filter(function (item) { return item.indexOf('.') > -1; });\n        selects.forEach(function (select) {\n            var splits = select.split('.');\n            if (!(splits[0] in selected)) {\n                selected[splits[0]] = [];\n            }\n            selected[splits[0]].push(splits[1]);\n        });\n        //Auto expand from select query\n        Object.keys(selected).forEach(function (expand) {\n            if ((expands.indexOf(expand) === -1)) {\n                expands.push(expand);\n            }\n        });\n        expands.forEach(function (expand) {\n            expanded[expand] = expand in selected ? expand + \"(\" + _this.options.select + \"=\" + selected[expand].join(',') + \")\" : expand;\n        });\n        Object.keys(expanded).forEach(function (ex) { return exArr.push(expanded[ex]); });\n        return exArr.join(',');\n    };\n    /**\n     * Returns the select query string.\n     * @param  {string[]} e\n     */\n    ODataV4Adaptor.prototype.onSelect = function (e) {\n        return _super.prototype.onSelect.call(this, e.filter(function (item) { return item.indexOf('.') === -1; }));\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    ODataV4Adaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (settings.type === 'POST' || settings.type === 'PUT' || settings.type === 'PATCH') {\n            request.setRequestHeader('Prefer', 'return=representation');\n        }\n        request.setRequestHeader('Accept', this.options.accept);\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    ODataV4Adaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var emptyAndBatch = _super.prototype.processBatchResponse.call(this, data, query, xhr, request, changes);\n        if (emptyAndBatch) {\n            return emptyAndBatch;\n        }\n        var count = null;\n        var dataCount = '@odata.count';\n        if (query && query.isCountRequired) {\n            if (dataCount in data) {\n                count = data[dataCount];\n            }\n        }\n        data = !isNullOrUndefined(data.value) ? data.value : data;\n        var args = {};\n        args.count = count;\n        args.result = data;\n        this.getAggregateResult(pvt, data, args, null, query);\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: count, aggregates: args.aggregates };\n    };\n    return ODataV4Adaptor;\n}(ODataAdaptor));\nexport { ODataV4Adaptor };\n/**\n * The Web API is a programmatic interface to define the request and response messages system that is mostly exposed in JSON or XML.\n * The DataManager uses the WebApiAdaptor to consume Web API.\n * Since this adaptor is targeted to interact with Web API created using OData endpoint, it is extended from ODataAdaptor\n * @hidden\n */\nvar WebApiAdaptor = /** @class */ (function (_super) {\n    __extends(WebApiAdaptor, _super);\n    function WebApiAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.insert = function (dm, data, tableName) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.url,\n            data: JSON.stringify(data)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {number} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        return {\n            type: 'DELETE',\n            url: dm.dataSource.url + '/' + value,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Prepare and return request body which is used to update record.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    WebApiAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        return {\n            type: 'PUT',\n            url: dm.dataSource.url,\n            data: JSON.stringify(value)\n        };\n    };\n    /**\n     * Method will trigger before send the request to server side.\n     * Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings\n     * @returns void\n     */\n    WebApiAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        request.setRequestHeader('Accept', 'application/json, text/javascript, */*; q=0.01');\n    };\n    /**\n     * Returns the data from the query processing.\n     * @param  {DataResult} data\n     * @param  {DataOptions} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     * @returns aggregateResult\n     */\n    WebApiAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        var pvtData = 'pvtData';\n        var pvt = request && request[pvtData];\n        var count = null;\n        var args = {};\n        if (request && request.type.toLowerCase() !== 'post') {\n            var versionCheck = xhr && request.getResponseHeader('DataServiceVersion');\n            var version = (versionCheck && parseInt(versionCheck, 10)) || 2;\n            if (query && query.isCountRequired) {\n                if (!DataUtil.isNull(data.Count)) {\n                    count = data.Count;\n                }\n            }\n            if (version < 3 && data.Items) {\n                data = data.Items;\n            }\n            args.count = count;\n            args.result = data;\n            this.getAggregateResult(pvt, data, args, null, query);\n        }\n        args.result = args.result || data;\n        return DataUtil.isNull(count) ? args.result : { result: args.result, count: args.count, aggregates: args.aggregates };\n    };\n    return WebApiAdaptor;\n}(ODataAdaptor));\nexport { WebApiAdaptor };\n/**\n * WebMethodAdaptor can be used by DataManager to interact with web method.\n * @hidden\n */\nvar WebMethodAdaptor = /** @class */ (function (_super) {\n    __extends(WebMethodAdaptor, _super);\n    function WebMethodAdaptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Prepare the request body based on the query.\n     * The query information can be accessed at the WebMethod using variable named `value`.\n     * @param  {DataManager} dm\n     * @param  {Query} query\n     * @param  {Object[]} hierarchyFilters?\n     * @returns application\n     */\n    WebMethodAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var obj = new UrlAdaptor().processQuery(dm, query, hierarchyFilters);\n        var getData = 'data';\n        var data = DataUtil.parse.parseJson(obj[getData]);\n        var result = {};\n        var value = 'value';\n        if (data.param) {\n            for (var i = 0; i < data.param.length; i++) {\n                var param = data.param[i];\n                var key = Object.keys(param)[0];\n                result[key] = param[key];\n            }\n        }\n        result[value] = data;\n        var pvtData = 'pvtData';\n        var url = 'url';\n        return {\n            data: JSON.stringify(result),\n            url: obj[url],\n            pvtData: obj[pvtData],\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8'\n        };\n    };\n    return WebMethodAdaptor;\n}(UrlAdaptor));\nexport { WebMethodAdaptor };\n/**\n * RemoteSaveAdaptor, extended from JsonAdaptor and it is used for binding local data and performs all DataManager queries in client-side.\n * It interacts with server-side only for CRUD operations.\n * @hidden\n */\nvar RemoteSaveAdaptor = /** @class */ (function (_super) {\n    __extends(RemoteSaveAdaptor, _super);\n    /**\n     * @hidden\n     */\n    function RemoteSaveAdaptor() {\n        var _this = _super.call(this) || this;\n        setValue('beforeSend', UrlAdaptor.prototype.beforeSend, _this);\n        return _this;\n    }\n    RemoteSaveAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.updateType = 'add';\n        return {\n            url: dm.dataSource.insertUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify({\n                value: data,\n                table: tableName,\n                action: 'insert'\n            })\n        };\n    };\n    RemoteSaveAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        _super.prototype.remove.call(this, dm, keyField, value);\n        return {\n            type: 'POST',\n            url: dm.dataSource.removeUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify({\n                key: value,\n                keyColumn: keyField,\n                table: tableName,\n                action: 'remove'\n            })\n        };\n    };\n    RemoteSaveAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.updateType = 'update';\n        this.updateKey = keyField;\n        return {\n            type: 'POST',\n            url: dm.dataSource.updateUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            data: JSON.stringify({\n                value: value,\n                action: 'update',\n                keyColumn: keyField,\n                key: value[keyField],\n                table: tableName\n            })\n        };\n    };\n    RemoteSaveAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes, e) {\n        var i;\n        if (this.updateType === 'add') {\n            _super.prototype.insert.call(this, ds, data, null, null, 0);\n        }\n        if (this.updateType === 'update') {\n            _super.prototype.update.call(this, ds, this.updateKey, data);\n        }\n        if (data.added) {\n            for (i = 0; i < data.added.length; i++) {\n                _super.prototype.insert.call(this, ds, data.added[i]);\n            }\n        }\n        if (data.changed) {\n            for (i = 0; i < data.changed.length; i++) {\n                _super.prototype.update.call(this, ds, e.key, data.changed[i]);\n            }\n        }\n        if (data.deleted) {\n            for (i = 0; i < data.deleted.length; i++) {\n                _super.prototype.remove.call(this, ds, e.key, data.deleted[i]);\n            }\n        }\n        return data;\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * Also perform the changes in the locally cached data to sync with the remote data.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    RemoteSaveAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return {\n            type: 'POST',\n            url: dm.dataSource.batchUrl || dm.dataSource.crudUrl || dm.dataSource.url,\n            contentType: 'application/json; charset=utf-8',\n            dataType: 'json',\n            data: JSON.stringify({\n                changed: changes.changedRecords,\n                added: changes.addedRecords,\n                deleted: changes.deletedRecords,\n                action: 'batch',\n                table: e.url,\n                key: e.key\n            })\n        };\n    };\n    return RemoteSaveAdaptor;\n}(JsonAdaptor));\nexport { RemoteSaveAdaptor };\n/**\n * Cache Adaptor is used to cache the data of the visited pages. It prevents new requests for the previously visited pages.\n * You can configure cache page size and duration of caching by using cachingPageSize and timeTillExpiration properties of the DataManager\n * @hidden\n */\nvar CacheAdaptor = /** @class */ (function (_super) {\n    __extends(CacheAdaptor, _super);\n    /**\n     * Constructor for CacheAdaptor class.\n     * @param  {CacheAdaptor} adaptor?\n     * @param  {number} timeStamp?\n     * @param  {number} pageSize?\n     * @hidden\n     */\n    function CacheAdaptor(adaptor, timeStamp, pageSize) {\n        var _this = _super.call(this) || this;\n        _this.isCrudAction = false;\n        _this.isInsertAction = false;\n        if (!isNullOrUndefined(adaptor)) {\n            _this.cacheAdaptor = adaptor;\n        }\n        _this.pageSize = pageSize;\n        _this.guidId = DataUtil.getGuid('cacheAdaptor');\n        var obj = { keys: [], results: [] };\n        window.localStorage.setItem(_this.guidId, JSON.stringify(obj));\n        var guid = _this.guidId;\n        if (!isNullOrUndefined(timeStamp)) {\n            setInterval(function () {\n                var data;\n                data = DataUtil.parse.parseJson(window.localStorage.getItem(guid));\n                var forDel = [];\n                for (var i = 0; i < data.results.length; i++) {\n                    var currentTime = +new Date();\n                    var requestTime = +new Date(data.results[i].timeStamp);\n                    data.results[i].timeStamp = currentTime - requestTime;\n                    if (currentTime - requestTime > timeStamp) {\n                        forDel.push(i);\n                    }\n                }\n                for (var i = 0; i < forDel.length; i++) {\n                    data.results.splice(forDel[i], 1);\n                    data.keys.splice(forDel[i], 1);\n                }\n                window.localStorage.removeItem(guid);\n                window.localStorage.setItem(guid, JSON.stringify(data));\n            }, timeStamp);\n        }\n        return _this;\n    }\n    /**\n     * It will generate the key based on the URL when we send a request to server.\n     * @param  {string} url\n     * @param  {Query} query?\n     * @hidden\n     */\n    CacheAdaptor.prototype.generateKey = function (url, query) {\n        var queries = this.getQueryRequest(query);\n        var singles = Query.filterQueryLists(query.queries, ['onSelect', 'onPage', 'onSkip', 'onTake', 'onRange']);\n        var key = url;\n        var page = 'onPage';\n        if (page in singles) {\n            key += singles[page].pageIndex;\n        }\n        queries.sorts.forEach(function (obj) {\n            key += obj.e.direction + obj.e.fieldName;\n        });\n        queries.groups.forEach(function (obj) {\n            key += obj.e.fieldName;\n        });\n        queries.searches.forEach(function (obj) {\n            key += obj.e.searchKey;\n        });\n        for (var filter = 0; filter < queries.filters.length; filter++) {\n            var currentFilter = queries.filters[filter];\n            if (currentFilter.e.isComplex) {\n                var newQuery = query.clone();\n                newQuery.queries = [];\n                for (var i = 0; i < currentFilter.e.predicates.length; i++) {\n                    newQuery.queries.push({ fn: 'onWhere', e: currentFilter.e.predicates[i], filter: query.queries.filter });\n                }\n                key += currentFilter.e.condition + this.generateKey(url, newQuery);\n            }\n            else {\n                key += currentFilter.e.field + currentFilter.e.operator + currentFilter.e.value;\n            }\n        }\n        return key;\n    };\n    /**\n     * Process the query to generate request body.\n     * If the data is already cached, it will return the cached data.\n     * @param  {DataManager} dm\n     * @param  {Query} query?\n     * @param  {Object[]} hierarchyFilters?\n     */\n    CacheAdaptor.prototype.processQuery = function (dm, query, hierarchyFilters) {\n        var key = this.generateKey(dm.dataSource.url, query);\n        var cachedItems;\n        cachedItems = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var data = cachedItems ? cachedItems.results[cachedItems.keys.indexOf(key)] : null;\n        if (data != null && !this.isCrudAction && !this.isInsertAction) {\n            return data;\n        }\n        this.isCrudAction = null;\n        this.isInsertAction = null;\n        return this.cacheAdaptor.processQuery.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n    };\n    /**\n     * Returns the data from the query processing.\n     * It will also cache the data for later usage.\n     * @param  {DataResult} data\n     * @param  {DataManager} ds?\n     * @param  {Query} query?\n     * @param  {XMLHttpRequest} xhr?\n     * @param  {Ajax} request?\n     * @param  {CrudOptions} changes?\n     */\n    CacheAdaptor.prototype.processResponse = function (data, ds, query, xhr, request, changes) {\n        if (this.isInsertAction || (request && this.cacheAdaptor.options.batch &&\n            DataUtil.endsWith(request.url, this.cacheAdaptor.options.batch) && request.type.toLowerCase() === 'post')) {\n            return this.cacheAdaptor.processResponse(data, ds, query, xhr, request, changes);\n        }\n        data = this.cacheAdaptor.processResponse.apply(this.cacheAdaptor, [].slice.call(arguments, 0));\n        var key = query ? this.generateKey(ds.dataSource.url, query) : ds.dataSource.url;\n        var obj = {};\n        obj = DataUtil.parse.parseJson(window.localStorage.getItem(this.guidId));\n        var index = obj.keys.indexOf(key);\n        if (index !== -1) {\n            obj.results.splice(index, 1);\n            obj.keys.splice(index, 1);\n        }\n        obj.results[obj.keys.push(key) - 1] = { keys: key, result: data.result, timeStamp: new Date(), count: data.count };\n        while (obj.results.length > this.pageSize) {\n            obj.results.splice(0, 1);\n            obj.keys.splice(0, 1);\n        }\n        window.localStorage.setItem(this.guidId, JSON.stringify(obj));\n        return data;\n    };\n    /**\n     * Method will trigger before send the request to server side. Used to set the custom header or modify the request options.\n     * @param  {DataManager} dm\n     * @param  {XMLHttpRequest} request\n     * @param  {Ajax} settings?\n     */\n    CacheAdaptor.prototype.beforeSend = function (dm, request, settings) {\n        if (DataUtil.endsWith(settings.url, this.cacheAdaptor.options.batch) && settings.type.toLowerCase() === 'post') {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.multipartAccept);\n        }\n        if (!dm.dataSource.crossDomain) {\n            request.setRequestHeader('Accept', this.cacheAdaptor.options.accept);\n        }\n    };\n    /**\n     * Updates existing record and saves the changes to the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName\n     */\n    CacheAdaptor.prototype.update = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.update(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare and returns request body which is used to insert a new record in the table.\n     * @param  {DataManager} dm\n     * @param  {Object} data\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.insert = function (dm, data, tableName) {\n        this.isInsertAction = true;\n        return this.cacheAdaptor.insert(dm, data, tableName);\n    };\n    /**\n     * Prepare and return request body which is used to remove record from the table.\n     * @param  {DataManager} dm\n     * @param  {string} keyField\n     * @param  {Object} value\n     * @param  {string} tableName?\n     */\n    CacheAdaptor.prototype.remove = function (dm, keyField, value, tableName) {\n        this.isCrudAction = true;\n        return this.cacheAdaptor.remove(dm, keyField, value, tableName);\n    };\n    /**\n     * Prepare the request body based on the newly added, removed and updated records.\n     * The result is used by the batch request.\n     * @param  {DataManager} dm\n     * @param  {CrudOptions} changes\n     * @param  {RemoteArgs} e\n     */\n    CacheAdaptor.prototype.batchRequest = function (dm, changes, e) {\n        return this.cacheAdaptor.batchRequest(dm, changes, e);\n    };\n    return CacheAdaptor;\n}(UrlAdaptor));\nexport { CacheAdaptor };\n","import { Ajax } from '@syncfusion/ej2-base';\nimport { extend, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataUtil } from './util';\nimport { Query } from './query';\nimport { ODataAdaptor, JsonAdaptor, CacheAdaptor, RemoteSaveAdaptor } from './adaptors';\n/**\n * DataManager is used to manage and manipulate relational data.\n */\nvar DataManager = /** @class */ (function () {\n    /**\n     * Constructor for DataManager class\n     * @param  {DataOptions|JSON[]} dataSource?\n     * @param  {Query} query?\n     * @param  {AdaptorOptions|string} adaptor?\n     * @hidden\n     */\n    function DataManager(dataSource, query, adaptor) {\n        var _this = this;\n        /** @hidden */\n        this.dateParse = true;\n        this.requests = [];\n        if (!dataSource && !this.dataSource) {\n            dataSource = [];\n        }\n        adaptor = adaptor || dataSource.adaptor;\n        var data;\n        if (dataSource instanceof Array) {\n            data = {\n                json: dataSource,\n                offline: true\n            };\n        }\n        else if (typeof dataSource === 'object') {\n            if (!dataSource.json) {\n                dataSource.json = [];\n            }\n            data = {\n                url: dataSource.url,\n                insertUrl: dataSource.insertUrl,\n                removeUrl: dataSource.removeUrl,\n                updateUrl: dataSource.updateUrl,\n                crudUrl: dataSource.crudUrl,\n                batchUrl: dataSource.batchUrl,\n                json: dataSource.json,\n                headers: dataSource.headers,\n                accept: dataSource.accept,\n                data: dataSource.data,\n                timeTillExpiration: dataSource.timeTillExpiration,\n                cachingPageSize: dataSource.cachingPageSize,\n                enableCaching: dataSource.enableCaching,\n                requestType: dataSource.requestType,\n                key: dataSource.key,\n                crossDomain: dataSource.crossDomain,\n                jsonp: dataSource.jsonp,\n                dataType: dataSource.dataType,\n                offline: dataSource.offline !== undefined ? dataSource.offline\n                    : dataSource.adaptor instanceof RemoteSaveAdaptor ? false : dataSource.url ? false : true,\n                requiresFormat: dataSource.requiresFormat\n            };\n        }\n        else {\n            DataUtil.throwError('DataManager: Invalid arguments');\n        }\n        if (data.requiresFormat === undefined && !DataUtil.isCors()) {\n            data.requiresFormat = isNullOrUndefined(data.crossDomain) ? true : data.crossDomain;\n        }\n        if (data.dataType === undefined) {\n            data.dataType = 'json';\n        }\n        this.dataSource = data;\n        this.defaultQuery = query;\n        if (data.url && data.offline && !data.json.length) {\n            this.isDataAvailable = false;\n            this.adaptor = adaptor || new ODataAdaptor();\n            this.dataSource.offline = false;\n            this.ready = this.executeQuery(query || new Query());\n            this.ready.then(function (e) {\n                _this.dataSource.offline = true;\n                _this.isDataAvailable = true;\n                data.json = e.result;\n                _this.adaptor = new JsonAdaptor();\n            });\n        }\n        else {\n            this.adaptor = data.offline ? new JsonAdaptor() : new ODataAdaptor();\n        }\n        if (!data.jsonp && this.adaptor instanceof ODataAdaptor) {\n            data.jsonp = 'callback';\n        }\n        this.adaptor = adaptor || this.adaptor;\n        if (data.enableCaching) {\n            this.adaptor = new CacheAdaptor(this.adaptor, data.timeTillExpiration, data.cachingPageSize);\n        }\n        return this;\n    }\n    /**\n     * Overrides DataManager's default query with given query.\n     * @param  {Query} query - Defines the new default query.\n     */\n    DataManager.prototype.setDefaultQuery = function (query) {\n        this.defaultQuery = query;\n        return this;\n    };\n    /**\n     * Executes the given query with local data source.\n     * @param  {Query} query - Defines the query to retrieve data.\n     */\n    DataManager.prototype.executeLocal = function (query) {\n        if (!this.defaultQuery && !(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeLocal() : A query is required to execute');\n        }\n        if (!this.dataSource.json) {\n            DataUtil.throwError('DataManager - executeLocal() : Json data is required to execute');\n        }\n        query = query || this.defaultQuery;\n        var result = this.adaptor.processQuery(this, query);\n        if (query.subQuery) {\n            var from = query.subQuery.fromTable;\n            var lookup = query.subQuery.lookups;\n            var res = query.isCountRequired ? result.result :\n                result;\n            if (lookup && lookup instanceof Array) {\n                DataUtil.buildHierarchy(query.subQuery.fKey, from, res, lookup, query.subQuery.key);\n            }\n            for (var j = 0; j < res.length; j++) {\n                if (res[j][from] instanceof Array) {\n                    res[j] = extend({}, {}, res[j]);\n                    res[j][from] = this.adaptor.processResponse(query.subQuery.using(new DataManager(res[j][from].slice(0))).executeLocal(), this, query);\n                }\n            }\n        }\n        return this.adaptor.processResponse(result, this, query);\n    };\n    /**\n     * Executes the given query with either local or remote data source.\n     * It will be executed as asynchronously and returns Promise object which will be resolved or rejected after action completed.\n     * @param  {Query|Function} query - Defines the query to retrieve data.\n     * @param  {Function} done - Defines the callback function and triggers when the Promise is resolved.\n     * @param  {Function} fail - Defines the callback function and triggers when the Promise is rejected.\n     * @param  {Function} always - Defines the callback function and triggers when the Promise is resolved or rejected.\n     */\n    DataManager.prototype.executeQuery = function (query, done, fail, always) {\n        var _this = this;\n        if (typeof query === 'function') {\n            always = fail;\n            fail = done;\n            done = query;\n            query = null;\n        }\n        if (!query) {\n            query = this.defaultQuery;\n        }\n        if (!(query instanceof Query)) {\n            DataUtil.throwError('DataManager - executeQuery() : A query is required to execute');\n        }\n        var deffered = new Deferred();\n        var args = { query: query };\n        if (!this.dataSource.offline && (this.dataSource.url !== undefined && this.dataSource.url !== '')) {\n            var result = this.adaptor.processQuery(this, query);\n            this.makeRequest(result, deffered, args, query);\n        }\n        else {\n            DataManager.nextTick(function () {\n                var res = _this.executeLocal(query);\n                args = DataManager.getDeferedArgs(query, res, args);\n                deffered.resolve(args);\n            });\n        }\n        if (done || fail) {\n            deffered.promise.then(done, fail);\n        }\n        if (always) {\n            deffered.promise.then(always, always);\n        }\n        return deffered.promise;\n    };\n    DataManager.getDeferedArgs = function (query, result, args) {\n        if (query.isCountRequired) {\n            args.result = result.result;\n            args.count = result.count;\n            args.aggregates = result.aggregates;\n        }\n        else {\n            args.result = result;\n        }\n        return args;\n    };\n    DataManager.nextTick = function (fn) {\n        (window.setImmediate || window.setTimeout)(fn, 0);\n    };\n    DataManager.prototype.extendRequest = function (url, fnSuccess, fnFail) {\n        return extend({}, {\n            type: 'GET',\n            dataType: this.dataSource.dataType,\n            crossDomain: this.dataSource.crossDomain,\n            jsonp: this.dataSource.jsonp,\n            cache: true,\n            processData: false,\n            onSuccess: fnSuccess,\n            onFailure: fnFail\n        }, url);\n    };\n    DataManager.prototype.makeRequest = function (url, deffered, args, query) {\n        var _this = this;\n        var isSelector = !!query.subQuerySelector;\n        var fnFail = function (e) {\n            args.error = e;\n            deffered.reject(args);\n        };\n        var process = function (data, count, xhr, request, actual, aggregates, virtualSelectRecords) {\n            args.xhr = xhr;\n            args.count = count ? parseInt(count.toString(), 10) : 0;\n            args.result = data;\n            args.request = request;\n            args.aggregates = aggregates;\n            args.actual = actual;\n            args.virtualSelectRecords = virtualSelectRecords;\n            deffered.resolve(args);\n        };\n        var fnQueryChild = function (data, selector) {\n            var subDeffer = new Deferred();\n            var childArgs = { parent: args };\n            query.subQuery.isChild = true;\n            var subUrl = _this.adaptor.processQuery(_this, query.subQuery, data ? _this.adaptor.processResponse(data) : selector);\n            var childReq = _this.makeRequest(subUrl, subDeffer, childArgs, query.subQuery);\n            if (!isSelector) {\n                subDeffer.then(function (subData) {\n                    if (data) {\n                        DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, data, subData, query.subQuery.key);\n                        process(data, subData.count, subData.xhr);\n                    }\n                }, fnFail);\n            }\n            return childReq;\n        };\n        var fnSuccess = function (data, request) {\n            if (request.httpRequest.getResponseHeader('Content-Type').indexOf('xml') === -1 && _this.dateParse) {\n                data = DataUtil.parse.parseJson(data);\n            }\n            var result = _this.adaptor.processResponse(data, _this, query, request.httpRequest, request);\n            var count = 0;\n            var aggregates = null;\n            var virtualSelectRecords = 'virtualSelectRecords';\n            var virtualRecords = data[virtualSelectRecords];\n            if (query.isCountRequired) {\n                count = result.count;\n                aggregates = result.aggregates;\n                result = result.result;\n            }\n            if (!query.subQuery) {\n                process(result, count, request.httpRequest, request.type, data, aggregates, virtualRecords);\n                return;\n            }\n            if (!isSelector) {\n                fnQueryChild(result, request);\n            }\n        };\n        var req = this.extendRequest(url, fnSuccess, fnFail);\n        var ajax = new Ajax(req);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        req = ajax.send();\n        req.catch(function (e) { return true; }); // to handle failure remote requests.        \n        this.requests.push(ajax);\n        if (isSelector) {\n            var promise = void 0;\n            var res = query.subQuerySelector.call(this, { query: query.subQuery, parent: query });\n            if (res && res.length) {\n                promise = Promise.all([req, fnQueryChild(null, res)]);\n                promise.then(function () {\n                    var args = [];\n                    for (var _i = 0; _i < arguments.length; _i++) {\n                        args[_i] = arguments[_i];\n                    }\n                    var result = args[0];\n                    var pResult = _this.adaptor.processResponse(result[0], _this, query, _this.requests[0].httpRequest, _this.requests[0]);\n                    var count = 0;\n                    if (query.isCountRequired) {\n                        count = pResult.count;\n                        pResult = pResult.result;\n                    }\n                    var cResult = _this.adaptor.processResponse(result[1], _this, query.subQuery, _this.requests[1].httpRequest, _this.requests[1]);\n                    count = 0;\n                    if (query.subQuery.isCountRequired) {\n                        count = cResult.count;\n                        cResult = cResult.result;\n                    }\n                    DataUtil.buildHierarchy(query.subQuery.fKey, query.subQuery.fromTable, pResult, cResult, query.subQuery.key);\n                    isSelector = false;\n                    process(pResult, count, _this.requests[0].httpRequest);\n                });\n            }\n            else {\n                isSelector = false;\n            }\n        }\n        return req;\n    };\n    DataManager.prototype.beforeSend = function (request, settings) {\n        this.adaptor.beforeSend(this, request, settings);\n        var headers = this.dataSource.headers;\n        var props;\n        for (var i = 0; headers && i < headers.length; i++) {\n            props = [];\n            var keys = Object.keys(headers[i]);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var prop = keys_1[_i];\n                props.push(prop);\n                request.setRequestHeader(prop, headers[i][prop]);\n            }\n        }\n    };\n    /**\n     * Save bulk changes to the given table name.\n     * User can add a new record, edit an existing record, and delete a record at the same time.\n     * If the datasource from remote, then updated in a single post.\n     * @param  {Object} changes - Defines the CrudOptions.\n     * @param  {string} key - Defines the column field.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.saveChanges = function (changes, key, tableName, query, original) {\n        var _this = this;\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var args = {\n            url: tableName,\n            key: key || this.dataSource.key\n        };\n        var req = this.adaptor.batchRequest(this, changes, args, query, original);\n        if (this.dataSource.offline) {\n            return req;\n        }\n        var deff = new Deferred();\n        var ajax = new Ajax(req);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        ajax.onSuccess = function (data, request) {\n            deff.resolve(_this.adaptor.processResponse(DataUtil.parse.parseJson(data), _this, null, request.httpRequest, request, changes, args));\n        };\n        ajax.onFailure = function (e) {\n            deff.reject([{ error: e }]);\n        };\n        ajax.send().catch(function (e) { return true; }); // to handle the failure requests.        \n        return deff.promise;\n    };\n    /**\n     * Inserts new record in the given table.\n     * @param  {Object} data - Defines the data to insert.\n     * @param  {string|Query} tableName - Defines the table name.\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.insert = function (data, tableName, query, position) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var req = this.adaptor.insert(this, data, tableName, query, position);\n        if (this.dataSource.offline) {\n            return req;\n        }\n        return this.doAjaxRequest(req);\n    };\n    /**\n     * Removes data from the table with the given key.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.remove = function (keyField, value, tableName, query) {\n        if (typeof value === 'object') {\n            value = value[keyField];\n        }\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.remove(this, keyField, value, tableName, query);\n        if (this.dataSource.offline) {\n            return res;\n        }\n        return this.doAjaxRequest(res);\n    };\n    /**\n     * Updates existing record in the given table.\n     * @param  {string} keyField - Defines the column field.\n     * @param  {Object} value - Defines the value to find the data in the specified column.\n     * @param  {string|Query} tableName - Defines the table name\n     * @param  {Query} query - Sets default query for the DataManager.\n     */\n    DataManager.prototype.update = function (keyField, value, tableName, query, original) {\n        if (tableName instanceof Query) {\n            query = tableName;\n            tableName = null;\n        }\n        var res = this.adaptor.update(this, keyField, value, tableName, query, original);\n        if (this.dataSource.offline) {\n            return res;\n        }\n        return this.doAjaxRequest(res);\n    };\n    DataManager.prototype.doAjaxRequest = function (res) {\n        var _this = this;\n        var defer = new Deferred();\n        res = extend({}, {\n            type: 'POST',\n            contentType: 'application/json; charset=utf-8',\n            processData: false\n        }, res);\n        var ajax = new Ajax(res);\n        ajax.beforeSend = function () {\n            _this.beforeSend(ajax.httpRequest, ajax);\n        };\n        ajax.onSuccess = function (record, request) {\n            try {\n                DataUtil.parse.parseJson(record);\n            }\n            catch (e) {\n                record = [];\n            }\n            record = _this.adaptor.processResponse(DataUtil.parse.parseJson(record), _this, null, request.httpRequest, request);\n            defer.resolve(record);\n        };\n        ajax.onFailure = function (e) {\n            defer.reject([{ error: e }]);\n        };\n        ajax.send().catch(function (e) { return true; }); // to handle the failure requests.\n        return defer.promise;\n    };\n    return DataManager;\n}());\nexport { DataManager };\n/**\n * Deferred is used to handle asynchronous operation.\n */\nvar Deferred = /** @class */ (function () {\n    function Deferred() {\n        var _this = this;\n        /**\n         * Promise is an object that represents a value that may not be available yet, but will be resolved at some point in the future.\n         */\n        this.promise = new Promise(function (resolve, reject) {\n            _this.resolve = resolve;\n            _this.reject = reject;\n        });\n        /**\n         * Defines the callback function triggers when the Deferred object is resolved.\n         */\n        this.then = this.promise.then.bind(this.promise);\n        /**\n         * Defines the callback function triggers when the Deferred object is rejected.\n         */\n        this.catch = this.promise.catch.bind(this.promise);\n    }\n    return Deferred;\n}());\nexport { Deferred };\n"],"names":["Query","from","this","subQuery","isChild","queries","key","fKey","fromTable","Array","lookups","expands","sortedColumns","groupedColumns","params","prototype","setKey","field","using","dataManager","execute","done","fail","always","executeQuery","DataUtil","throwError","executeLocal","clone","cloned","slice","subQuerySelector","isCountRequired","tableName","addParams","value","push","fn","expand","tables","call","where","fieldName","operator","ignoreCase","ignoreAccent","toLowerCase","predicate","Predicate","e","search","searchKey","fieldNames","comparer","fnOperators","sortBy","isFromGroup","sorts","temp","order","endsWith","replace","fnSort","filterQueries","i","length","j","direction","sortByDesc","group","format","page","pageIndex","pageSize","range","start","end","take","nos","skip","select","hierarchy","query","selectorFn","foreignKey","requiresCount","aggregate","type","name","filter","q","filterQueryLists","singles","filtered","indexOf","res","isComplex","processOperator","condition","predicates","apply","and","args","_i","arguments","combinePredicates","combine","or","fromJson","json","len","fromJSONData","pred","validate","record","isAnd","ret","getObject","toJson","p","preds","consts","GroupGuid","getValue","inst","input","substr","startsWith","fnAscending","fnDescending","x","y","undefined","localeCompare","extractFields","obj","fields","newObj","setValue","jsonArray","newData","aggregates","level","groupDs","jsonData","_loop_1","isNullOrUndefined","items","this_1","count","indx","childLevels","grouped","groupedArray","records","_loop_2","val","this_2","getVal","tempObj","_loop_3","aggs","buildHierarchy","source","lookup","pKey","grp","result","fKeyData","getFieldList","prefix","copyObj","keys_1","Object","keys","prop","nameSpace","splits","split","toString","fromObj","sort","ds","middle","parseInt","left","right","merge","ignoreDiacritics","map","diacritics","join","current","shift","array","index","callAdaptorFunction","adaptor","fnName","param1","param2","isPlainObject","constructor","isCors","xhr","window","getGuid","rand","crypto","arr","Uint8Array","getRandomValues","Math","random","isNull","getItemFromComparer","keyVal","castRequired","distinct","requiresCompleteRecord","tmp","forEach","data","serverTimezoneOffset","error","Error","message","stack","sum","isNaN","average","min","max","truecount","DataManager","falsecount","operatorSymbols","<",">","<=",">=","==","!=","*=","$=","^=","odBiOperator","lessthan","lessthanorequal","greaterthan","greaterthanorequal","equal","notequal","odUniOperator","endswith","startswith","contains","odv4UniOperator","Ⓐ","Ａ","À","Á","Â","Ầ","Ấ","Ẫ","Ẩ","Ã","Ā","Ă","Ằ","Ắ","Ẵ","Ẳ","Ȧ","Ǡ","Ä","Ǟ","Ả","Å","Ǻ","Ǎ","Ȁ","Ȃ","Ạ","Ậ","Ặ","Ḁ","Ą","Ⱥ","Ɐ","Ꜳ","Æ","Ǽ","Ǣ","Ꜵ","Ꜷ","Ꜹ","Ꜻ","Ꜽ","Ⓑ","Ｂ","Ḃ","Ḅ","Ḇ","Ƀ","Ƃ","Ɓ","Ⓒ","Ｃ","Ć","Ĉ","Ċ","Č","Ç","Ḉ","Ƈ","Ȼ","Ꜿ","Ⓓ","Ｄ","Ḋ","Ď","Ḍ","Ḑ","Ḓ","Ḏ","Đ","Ƌ","Ɗ","Ɖ","Ꝺ","Ǳ","Ǆ","ǲ","ǅ","Ⓔ","Ｅ","È","É","Ê","Ề","Ế","Ễ","Ể","Ẽ","Ē","Ḕ","Ḗ","Ĕ","Ė","Ë","Ẻ","Ě","Ȅ","Ȇ","Ẹ","Ệ","Ȩ","Ḝ","Ę","Ḙ","Ḛ","Ɛ","Ǝ","Ⓕ","Ｆ","Ḟ","Ƒ","Ꝼ","Ⓖ","Ｇ","Ǵ","Ĝ","Ḡ","Ğ","Ġ","Ǧ","Ģ","Ǥ","Ɠ","Ꞡ","Ᵹ","Ꝿ","Ⓗ","Ｈ","Ĥ","Ḣ","Ḧ","Ȟ","Ḥ","Ḩ","Ḫ","Ħ","Ⱨ","Ⱶ","Ɥ","Ⓘ","Ｉ","Ì","Í","Î","Ĩ","Ī","Ĭ","İ","Ï","Ḯ","Ỉ","Ǐ","Ȉ","Ȋ","Ị","Į","Ḭ","Ɨ","Ⓙ","Ｊ","Ĵ","Ɉ","Ⓚ","Ｋ","Ḱ","Ǩ","Ḳ","Ķ","Ḵ","Ƙ","Ⱪ","Ꝁ","Ꝃ","Ꝅ","Ꞣ","Ⓛ","Ｌ","Ŀ","Ĺ","Ľ","Ḷ","Ḹ","Ļ","Ḽ","Ḻ","Ł","Ƚ","Ɫ","Ⱡ","Ꝉ","Ꝇ","Ꞁ","Ǉ","ǈ","Ⓜ","Ｍ","Ḿ","Ṁ","Ṃ","Ɱ","Ɯ","Ⓝ","Ｎ","Ǹ","Ń","Ñ","Ṅ","Ň","Ṇ","Ņ","Ṋ","Ṉ","Ƞ","Ɲ","Ꞑ","Ꞥ","Ǌ","ǋ","Ⓞ","Ｏ","Ò","Ó","Ô","Ồ","Ố","Ỗ","Ổ","Õ","Ṍ","Ȭ","Ṏ","Ō","Ṑ","Ṓ","Ŏ","Ȯ","Ȱ","Ö","Ȫ","Ỏ","Ő","Ǒ","Ȍ","Ȏ","Ơ","Ờ","Ớ","Ỡ","Ở","Ợ","Ọ","Ộ","Ǫ","Ǭ","Ø","Ǿ","Ɔ","Ɵ","Ꝋ","Ꝍ","Ƣ","Ꝏ","Ȣ","Ⓟ","Ｐ","Ṕ","Ṗ","Ƥ","Ᵽ","Ꝑ","Ꝓ","Ꝕ","Ⓠ","Ｑ","Ꝗ","Ꝙ","Ɋ","Ⓡ","Ｒ","Ŕ","Ṙ","Ř","Ȑ","Ȓ","Ṛ","Ṝ","Ŗ","Ṟ","Ɍ","Ɽ","Ꝛ","Ꞧ","Ꞃ","Ⓢ","Ｓ","ẞ","Ś","Ṥ","Ŝ","Ṡ","Š","Ṧ","Ṣ","Ṩ","Ș","Ş","Ȿ","Ꞩ","Ꞅ","Ⓣ","Ｔ","Ṫ","Ť","Ṭ","Ț","Ţ","Ṱ","Ṯ","Ŧ","Ƭ","Ʈ","Ⱦ","Ꞇ","Ꜩ","Ⓤ","Ｕ","Ù","Ú","Û","Ũ","Ṹ","Ū","Ṻ","Ŭ","Ü","Ǜ","Ǘ","Ǖ","Ǚ","Ủ","Ů","Ű","Ǔ","Ȕ","Ȗ","Ư","Ừ","Ứ","Ữ","Ử","Ự","Ụ","Ṳ","Ų","Ṷ","Ṵ","Ʉ","Ⓥ","Ｖ","Ṽ","Ṿ","Ʋ","Ꝟ","Ʌ","Ꝡ","Ⓦ","Ｗ","Ẁ","Ẃ","Ŵ","Ẇ","Ẅ","Ẉ","Ⱳ","Ⓧ","Ｘ","Ẋ","Ẍ","Ⓨ","Ｙ","Ỳ","Ý","Ŷ","Ỹ","Ȳ","Ẏ","Ÿ","Ỷ","Ỵ","Ƴ","Ɏ","Ỿ","Ⓩ","Ｚ","Ź","Ẑ","Ż","Ž","Ẓ","Ẕ","Ƶ","Ȥ","Ɀ","Ⱬ","Ꝣ","ⓐ","ａ","ẚ","à","á","â","ầ","ấ","ẫ","ẩ","ã","ā","ă","ằ","ắ","ẵ","ẳ","ȧ","ǡ","ä","ǟ","ả","å","ǻ","ǎ","ȁ","ȃ","ạ","ậ","ặ","ḁ","ą","ⱥ","ɐ","ꜳ","æ","ǽ","ǣ","ꜵ","ꜷ","ꜹ","ꜻ","ꜽ","ⓑ","ｂ","ḃ","ḅ","ḇ","ƀ","ƃ","ɓ","ⓒ","ｃ","ć","ĉ","ċ","č","ç","ḉ","ƈ","ȼ","ꜿ","ↄ","ⓓ","ｄ","ḋ","ď","ḍ","ḑ","ḓ","ḏ","đ","ƌ","ɖ","ɗ","ꝺ","ǳ","ǆ","ⓔ","ｅ","è","é","ê","ề","ế","ễ","ể","ẽ","ē","ḕ","ḗ","ĕ","ė","ë","ẻ","ě","ȅ","ȇ","ẹ","ệ","ȩ","ḝ","ę","ḙ","ḛ","ɇ","ɛ","ǝ","ⓕ","ｆ","ḟ","ƒ","ꝼ","ⓖ","ｇ","ǵ","ĝ","ḡ","ğ","ġ","ǧ","ģ","ǥ","ɠ","ꞡ","ᵹ","ꝿ","ⓗ","ｈ","ĥ","ḣ","ḧ","ȟ","ḥ","ḩ","ḫ","ẖ","ħ","ⱨ","ⱶ","ɥ","ƕ","ⓘ","ｉ","ì","í","î","ĩ","ī","ĭ","ï","ḯ","ỉ","ǐ","ȉ","ȋ","ị","į","ḭ","ɨ","ı","ⓙ","ｊ","ĵ","ǰ","ɉ","ⓚ","ｋ","ḱ","ǩ","ḳ","ķ","ḵ","ƙ","ⱪ","ꝁ","ꝃ","ꝅ","ꞣ","ⓛ","ｌ","ŀ","ĺ","ľ","ḷ","ḹ","ļ","ḽ","ḻ","ſ","ł","ƚ","ɫ","ⱡ","ꝉ","ꞁ","ꝇ","ǉ","ⓜ","ｍ","ḿ","ṁ","ṃ","ɱ","ɯ","ⓝ","ｎ","ǹ","ń","ñ","ṅ","ň","ṇ","ņ","ṋ","ṉ","ƞ","ɲ","ŉ","ꞑ","ꞥ","ǌ","ⓞ","ｏ","ò","ó","ô","ồ","ố","ỗ","ổ","õ","ṍ","ȭ","ṏ","ō","ṑ","ṓ","ŏ","ȯ","ȱ","ö","ȫ","ỏ","ő","ǒ","ȍ","ȏ","ơ","ờ","ớ","ỡ","ở","ợ","ọ","ộ","ǫ","ǭ","ø","ǿ","ɔ","ꝋ","ꝍ","ɵ","ƣ","ȣ","ꝏ","ⓟ","ｐ","ṕ","ṗ","ƥ","ᵽ","ꝑ","ꝓ","ꝕ","ⓠ","ｑ","ɋ","ꝗ","ꝙ","ⓡ","ｒ","ŕ","ṙ","ř","ȑ","ȓ","ṛ","ṝ","ŗ","ṟ","ɍ","ɽ","ꝛ","ꞧ","ꞃ","ⓢ","ｓ","ß","ś","ṥ","ŝ","ṡ","š","ṧ","ṣ","ṩ","ș","ş","ȿ","ꞩ","ꞅ","ẛ","ⓣ","ｔ","ṫ","ẗ","ť","ṭ","ț","ţ","ṱ","ṯ","ŧ","ƭ","ʈ","ⱦ","ꞇ","ꜩ","ⓤ","ｕ","ù","ú","û","ũ","ṹ","ū","ṻ","ŭ","ü","ǜ","ǘ","ǖ","ǚ","ủ","ů","ű","ǔ","ȕ","ȗ","ư","ừ","ứ","ữ","ử","ự","ụ","ṳ","ų","ṷ","ṵ","ʉ","ⓥ","ｖ","ṽ","ṿ","ʋ","ꝟ","ʌ","ꝡ","ⓦ","ｗ","ẁ","ẃ","ŵ","ẇ","ẅ","ẘ","ẉ","ⱳ","ⓧ","ｘ","ẋ","ẍ","ⓨ","ｙ","ỳ","ý","ŷ","ỹ","ȳ","ẏ","ÿ","ỷ","ẙ","ỵ","ƴ","ɏ","ỿ","ⓩ","ｚ","ź","ẑ","ż","ž","ẓ","ẕ","ƶ","ȥ","ɀ","ⱬ","ꝣ","Ά","Έ","Ή","Ί","Ϊ","Ό","Ύ","Ϋ","Ώ","ά","έ","ή","ί","ϊ","ΐ","ό","ύ","ϋ","ΰ","ω","ς","actual","expected","notnull","isnull","processSymbols","parse","parseJson","jsonText","JSON","jsonReviver","iterateAndReviveArray","iterateAndReviveJson","test","keys_2","dupValue","ms","exec","dateParse","toTimeZone","Date","isJson","isGuid","replacer","stringify","jsonReplacer","arrayReplacer","keys_3","d","addSelfOffset","toJSON","date","getTimezoneOffset","toUTC","offset","utc","unix","toLocalTime","datefn","timeZone","differenceString","localtimefn","num","norm","floor","abs","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__extends","extendStatics","setPrototypeOf","__proto__","b","hasOwnProperty","__","create","Adaptor","options","requestType","dataSource","pvt","processResponse","JsonAdaptor","_super","processQuery","countFlg","agg","batchRequest","dm","changes","addedRecords","insert","changedRecords","update","deletedRecords","remove","onWhere","onAggregates","onSearch","onSortBy","fnCompare","onGroup","aggQuery","onPage","size","onRange","onTake","onSkip","onSelect","position","splice","keyField","UrlAdaptor","hierarchyFilters","getQueryRequest","url","request","groups","filters","searches","getFiltersFrom","req","getRequestQuery","reqParams","_a","pvtData","contentType","convertToQueryString","request1","selects","requests","getResponseHeader","action","getAggregateResult","original","batchUrl","crudUrl","removeUrl","dataType","changed","added","deleted","table","beforeSend","insertUrl","keyColumn","updateUrl","predicats","pData","aggregateData","groupQuery","ODataAdaptor","props","_this","extend","accept","multipartAccept","batch","changeSet","batchPre","contentId","batchContent","changeSetContent","batchChangeSetContentType","updateType","getModuleName","onPredicate","requiresCast","guid","returnValue","getField","onComplexPredicate","onEachWhere","onEachSearch","onEachSort","reverse","onCount","settings","setRequestHeader","overrideMimeType","dataCopy","results","emptyAndBatch","processBatchResponse","versionCheck","version","oDataCount","requiresFormat","keys_4","localTimeReplacer","convertObj","localTime","compareAndRemove","initialGuid","cid","cSet","generateInsertRequest","generateUpdateRequest","generateDeleteRequest","generateBodyContent","method","stat","org","change","o","cIdx","jsonObj","substring","exVal","changeGuid","valueOf","ODataV4Adaptor","getModulename","isDate","onExpand","selected","expanded","exArr","item","ex","WebApiAdaptor","Count","Items","WebMethodAdaptor","param","RemoteSaveAdaptor","updateKey","CacheAdaptor","timeStamp","isCrudAction","isInsertAction","cacheAdaptor","guidId","localStorage","setItem","setInterval","getItem","forDel","currentTime","requestTime","removeItem","generateKey","currentFilter","newQuery","cachedItems","crossDomain","offline","headers","timeTillExpiration","cachingPageSize","enableCaching","jsonp","defaultQuery","isDataAvailable","ready","then","setDefaultQuery","deffered","Deferred","nextTick","getDeferedArgs","resolve","makeRequest","promise","setImmediate","setTimeout","extendRequest","fnSuccess","fnFail","cache","processData","onSuccess","onFailure","isSelector","reject","process","virtualSelectRecords","fnQueryChild","selector","subDeffer","childArgs","parent","subUrl","childReq","subData","httpRequest","virtualRecords","ajax","Ajax","send","catch","Promise","all","pResult","cResult","saveChanges","deff","doAjaxRequest","defer","bind"],"mappings":"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"}